{"ast":null,"code":"import _initializerDefineProperty from \"/Users/yh/Desktop/workspace/kdb_studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/yh/Desktop/workspace/kdb_studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/yh/Desktop/workspace/kdb_studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3;\n\nimport { observable, action, computed, makeObservable, toJS } from 'mobx';\nlet EkdbStore = (_class = class EkdbStore {\n  // 데코레이터기법을 사용하기 위해서\n  // makeObservable 선언\n  constructor() {\n    _initializerDefineProperty(this, \"_ekdbs\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"_action\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"_target\", _descriptor3, this);\n\n    makeObservable(this);\n  } // 관찰 되어질\n  // ekdb 목록 배열\n\n\n  //toJS사용이유\n  get ekdbs() {\n    return toJS(this._ekdbs);\n  }\n\n  get action() {\n    return toJS(this._action);\n  }\n\n  get target() {\n    return toJS(this._target);\n  }\n\n  clear() {\n    this._ekdbs = [];\n  } // ekdb 정보 설정 함수\n\n\n  setEKDBProps(name, value) {\n    this._ekdb = { ...this._ekdb,\n      [name]: value\n    };\n  } // ekdbs 배열 값 설정 함수\n\n\n  setEKDBs(ekdbs) {\n    this._ekdbs = [...ekdbs];\n  }\n\n}, (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"_ekdbs\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"_action\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '';\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"_target\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return {\n      id: '',\n      name: '',\n      des: ''\n    };\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"ekdbs\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"ekdbs\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"action\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"action\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"target\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"target\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"clear\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"clear\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setEKDBProps\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setEKDBProps\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setEKDBs\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setEKDBs\"), _class.prototype)), _class);\nexport default new EkdbStore();","map":{"version":3,"sources":["/Users/yh/Desktop/workspace/kdb_studio/src/ekdb/store/EkdbStore.js"],"names":["observable","action","computed","makeObservable","toJS","EkdbStore","constructor","ekdbs","_ekdbs","_action","target","_target","clear","setEKDBProps","name","value","_ekdb","setEKDBs","id","des"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,QAA7B,EAAuCC,cAAvC,EAAuDC,IAAvD,QAAmE,MAAnE;IAEMC,S,aAAN,MAAMA,SAAN,CAAgB;AACd;AACA;AACAC,EAAAA,WAAW,GAAG;AAAA;;AAAA;;AAAA;;AACZH,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GALa,CAOd;AACA;;;AAeA;AAES,MAALI,KAAK,GAAG;AACV,WAAOH,IAAI,CAAC,KAAKI,MAAN,CAAX;AACD;;AAGS,MAANP,MAAM,GAAG;AACX,WAAOG,IAAI,CAAC,KAAKK,OAAN,CAAX;AACD;;AAGS,MAANC,MAAM,GAAG;AACX,WAAON,IAAI,CAAC,KAAKO,OAAN,CAAX;AACD;;AAGDC,EAAAA,KAAK,GAAG;AACN,SAAKJ,MAAL,GAAc,EAAd;AACD,GA1Ca,CA4Cd;;;AAEAK,EAAAA,YAAY,CAACC,IAAD,EAAOC,KAAP,EAAc;AACxB,SAAKC,KAAL,GAAa,EACX,GAAG,KAAKA,KADG;AAEX,OAACF,IAAD,GAAQC;AAFG,KAAb;AAID,GAnDa,CAqDd;;;AAEAE,EAAAA,QAAQ,CAACV,KAAD,EAAQ;AACd,SAAKC,MAAL,GAAc,CAAC,GAAGD,KAAJ,CAAd;AACD;;AAzDa,C,wEASbP,U;;;;;WACQ,E;;2EAERA,U;;;;;WACS,E;;2EAGTA,U;;;;;WACS;AACRkB,MAAAA,EAAE,EAAE,EADI;AAERJ,MAAAA,IAAI,EAAE,EAFE;AAGRK,MAAAA,GAAG,EAAE;AAHG,K;;0DAOTjB,Q,yIAKAA,Q,0IAKAA,Q,yIAKAD,M,+IAMAA,M,kJASAA,M;AAMH,eAAe,IAAII,SAAJ,EAAf","sourcesContent":["import { observable, action, computed, makeObservable, toJS } from 'mobx';\n\nclass EkdbStore {\n  // 데코레이터기법을 사용하기 위해서\n  // makeObservable 선언\n  constructor() {\n    makeObservable(this);\n  }\n\n  // 관찰 되어질\n  // ekdb 목록 배열\n  @observable\n  _ekdbs = [];\n\n  @observable\n  _action = '';\n\n  // 현재입력되는 정보\n  @observable\n  _target = {\n    id: '',\n    name: '',\n    des: '',\n  };\n\n  //toJS사용이유\n  @computed\n  get ekdbs() {\n    return toJS(this._ekdbs);\n  }\n\n  @computed\n  get action() {\n    return toJS(this._action);\n  }\n\n  @computed\n  get target() {\n    return toJS(this._target);\n  }\n\n  @action\n  clear() {\n    this._ekdbs = [];\n  }\n\n  // ekdb 정보 설정 함수\n  @action\n  setEKDBProps(name, value) {\n    this._ekdb = {\n      ...this._ekdb,\n      [name]: value,\n    };\n  }\n\n  // ekdbs 배열 값 설정 함수\n  @action\n  setEKDBs(ekdbs) {\n    this._ekdbs = [...ekdbs];\n  }\n}\n\nexport default new EkdbStore();\n"]},"metadata":{},"sourceType":"module"}