{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hasValue = hasValue;\nexports.isFilled = isFilled;\nexports.isAdornedStart = isAdornedStart; // Supports determination of isControlled().\n// Controlled input accepts its current value as a prop.\n//\n// @see https://facebook.github.io/react/docs/forms.html#controlled-components\n// @param value\n// @returns {boolean} true if string (including '') or number (including zero)\n\nfunction hasValue(value) {\n  return value != null && !(Array.isArray(value) && value.length === 0);\n} // Determine if field is empty or filled.\n// Response determines if label is presented above field or as placeholder.\n//\n// @param obj\n// @param SSR\n// @returns {boolean} False when not present or empty string.\n//                    True when any number or string with length.\n\n\nfunction isFilled(obj, SSR = false) {\n  return obj && (hasValue(obj.value) && obj.value !== '' || SSR && hasValue(obj.defaultValue) && obj.defaultValue !== '');\n} // Determine if an Input is adorned on start.\n// It's corresponding to the left with LTR.\n//\n// @param obj\n// @returns {boolean} False when no adornments.\n//                    True when adorned at the start.\n\n\nfunction isAdornedStart(obj) {\n  return obj.startAdornment;\n}","map":{"version":3,"sources":["/Users/yh/Desktop/github/workspace/kdb_studio/node_modules/@material-ui/core/node/InputBase/utils.js"],"names":["Object","defineProperty","exports","value","hasValue","isFilled","isAdornedStart","Array","isArray","length","obj","SSR","defaultValue","startAdornment"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,QAAR,GAAmBA,QAAnB;AACAF,OAAO,CAACG,QAAR,GAAmBA,QAAnB;AACAH,OAAO,CAACI,cAAR,GAAyBA,cAAzB,C,CAEA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASF,QAAT,CAAkBD,KAAlB,EAAyB;AACvB,SAAOA,KAAK,IAAI,IAAT,IAAiB,EAAEI,KAAK,CAACC,OAAN,CAAcL,KAAd,KAAwBA,KAAK,CAACM,MAAN,KAAiB,CAA3C,CAAxB;AACD,C,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASJ,QAAT,CAAkBK,GAAlB,EAAuBC,GAAG,GAAG,KAA7B,EAAoC;AAClC,SAAOD,GAAG,KAAKN,QAAQ,CAACM,GAAG,CAACP,KAAL,CAAR,IAAuBO,GAAG,CAACP,KAAJ,KAAc,EAArC,IAA2CQ,GAAG,IAAIP,QAAQ,CAACM,GAAG,CAACE,YAAL,CAAf,IAAqCF,GAAG,CAACE,YAAJ,KAAqB,EAA1G,CAAV;AACD,C,CAAC;AACF;AACA;AACA;AACA;AACA;;;AAGA,SAASN,cAAT,CAAwBI,GAAxB,EAA6B;AAC3B,SAAOA,GAAG,CAACG,cAAX;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hasValue = hasValue;\nexports.isFilled = isFilled;\nexports.isAdornedStart = isAdornedStart;\n\n// Supports determination of isControlled().\n// Controlled input accepts its current value as a prop.\n//\n// @see https://facebook.github.io/react/docs/forms.html#controlled-components\n// @param value\n// @returns {boolean} true if string (including '') or number (including zero)\nfunction hasValue(value) {\n  return value != null && !(Array.isArray(value) && value.length === 0);\n} // Determine if field is empty or filled.\n// Response determines if label is presented above field or as placeholder.\n//\n// @param obj\n// @param SSR\n// @returns {boolean} False when not present or empty string.\n//                    True when any number or string with length.\n\n\nfunction isFilled(obj, SSR = false) {\n  return obj && (hasValue(obj.value) && obj.value !== '' || SSR && hasValue(obj.defaultValue) && obj.defaultValue !== '');\n} // Determine if an Input is adorned on start.\n// It's corresponding to the left with LTR.\n//\n// @param obj\n// @returns {boolean} False when no adornments.\n//                    True when adorned at the start.\n\n\nfunction isAdornedStart(obj) {\n  return obj.startAdornment;\n}"]},"metadata":{},"sourceType":"script"}