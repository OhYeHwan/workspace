{"ast":null,"code":"import _initializerDefineProperty from \"/Users/yh/Desktop/github/workspace/kdb_studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/yh/Desktop/github/workspace/kdb_studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/yh/Desktop/github/workspace/kdb_studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4;\n\nimport { observable, action, makeObservable, toJS, computed } from 'mobx';\nlet UkStore = (_class = class UkStore {\n  constructor() {\n    _initializerDefineProperty(this, \"_uks\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"_target\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"_questions\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"_question\", _descriptor4, this);\n\n    makeObservable(this);\n  } // 서버에서 받아온 uk 리스트를 담을 배열\n\n\n  get uks() {\n    return toJS(this._uks);\n  }\n\n  get target() {\n    return toJS(this._target);\n  }\n\n  get questions() {\n    return toJS(this._questions);\n  }\n\n  get question() {\n    return this._question;\n  }\n\n  clear() {\n    this._target = {\n      name: '',\n      des: ''\n    };\n  }\n\n  funcTargetOnChange(key, value) {\n    this._target = { ...this._target,\n      [key]: value\n    };\n  }\n\n  funcQuestionChange(question) {\n    this._question = question;\n  }\n\n  funcAddQuestion(question) {\n    this._questions.push(question);\n\n    this._question = '';\n  }\n\n  funcRemoveQuestion(id) {\n    let index = this._questions.findIndex(question => question.id === id);\n\n    if (index > -1) {\n      this._questions.splice(index, 1);\n    }\n  }\n\n  funcKeyPress(event, question) {\n    if (event.key === 'Enter') {\n      this.funcAddQuestion(question);\n    }\n  }\n\n}, (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"_uks\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"_target\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return {\n      name: '',\n      des: ''\n    };\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"_questions\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"_question\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '';\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"uks\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"uks\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"target\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"target\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"questions\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"questions\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"question\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"question\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"clear\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"clear\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"funcTargetOnChange\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"funcTargetOnChange\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"funcQuestionChange\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"funcQuestionChange\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"funcAddQuestion\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"funcAddQuestion\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"funcRemoveQuestion\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"funcRemoveQuestion\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"funcKeyPress\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"funcKeyPress\"), _class.prototype)), _class);\nexport default new UkStore();","map":{"version":3,"sources":["/Users/yh/Desktop/github/workspace/kdb_studio/src/uk/store/UkStore.js"],"names":["observable","action","makeObservable","toJS","computed","UkStore","constructor","uks","_uks","target","_target","questions","_questions","question","_question","clear","name","des","funcTargetOnChange","key","value","funcQuestionChange","funcAddQuestion","push","funcRemoveQuestion","id","index","findIndex","splice","funcKeyPress","event"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,cAA7B,EAA6CC,IAA7C,EAAmDC,QAAnD,QAAmE,MAAnE;IAEMC,O,aAAN,MAAMA,OAAN,CAAc;AACZC,EAAAA,WAAW,GAAG;AAAA;;AAAA;;AAAA;;AAAA;;AACZJ,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAHW,CAKZ;;;AAoBO,MAAHK,GAAG,GAAG;AACR,WAAOJ,IAAI,CAAC,KAAKK,IAAN,CAAX;AACD;;AAGS,MAANC,MAAM,GAAG;AACX,WAAON,IAAI,CAAC,KAAKO,OAAN,CAAX;AACD;;AAGY,MAATC,SAAS,GAAG;AACd,WAAOR,IAAI,CAAC,KAAKS,UAAN,CAAX;AACD;;AAGW,MAARC,QAAQ,GAAG;AACb,WAAO,KAAKC,SAAZ;AACD;;AAGDC,EAAAA,KAAK,GAAG;AACN,SAAKL,OAAL,GAAe;AACbM,MAAAA,IAAI,EAAE,EADO;AAEbC,MAAAA,GAAG,EAAE;AAFQ,KAAf;AAID;;AAGDC,EAAAA,kBAAkB,CAACC,GAAD,EAAMC,KAAN,EAAa;AAC7B,SAAKV,OAAL,GAAe,EACb,GAAG,KAAKA,OADK;AAEb,OAACS,GAAD,GAAOC;AAFM,KAAf;AAID;;AAGDC,EAAAA,kBAAkB,CAACR,QAAD,EAAW;AAC3B,SAAKC,SAAL,GAAiBD,QAAjB;AACD;;AAGDS,EAAAA,eAAe,CAACT,QAAD,EAAW;AACxB,SAAKD,UAAL,CAAgBW,IAAhB,CAAqBV,QAArB;;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACD;;AAGDU,EAAAA,kBAAkB,CAACC,EAAD,EAAK;AACrB,QAAIC,KAAK,GAAG,KAAKd,UAAL,CAAgBe,SAAhB,CAA0Bd,QAAQ,IAAIA,QAAQ,CAACY,EAAT,KAAgBA,EAAtD,CAAZ;;AACA,QAAIC,KAAK,GAAG,CAAC,CAAb,EAAgB;AACd,WAAKd,UAAL,CAAgBgB,MAAhB,CAAuBF,KAAvB,EAA8B,CAA9B;AACD;AACF;;AAGDG,EAAAA,YAAY,CAACC,KAAD,EAAQjB,QAAR,EAAkB;AAC5B,QAAIiB,KAAK,CAACX,GAAN,KAAc,OAAlB,EAA2B;AACzB,WAAKG,eAAL,CAAqBT,QAArB;AACD;AACF;;AApFW,C,sEAMXb,U;;;;;WACM,E;;2EAGNA,U;;;;;WACS;AACRgB,MAAAA,IAAI,EAAE,EADE;AAERC,MAAAA,GAAG,EAAE;AAFG,K;;8EAMTjB,U;;;;;WACY,E;;6EAGZA,U;;;;;WACW,E;;wDAEXI,Q,uIAKAA,Q,6IAKAA,Q,+IAKAA,Q,2IAKAH,M,qJAQAA,M,kKAQAA,M,+JAKAA,M,+JAMAA,M,4JAQAA,M;AAQH,eAAe,IAAII,OAAJ,EAAf","sourcesContent":["import { observable, action, makeObservable, toJS, computed } from 'mobx';\n\nclass UkStore {\n  constructor() {\n    makeObservable(this);\n  }\n\n  // 서버에서 받아온 uk 리스트를 담을 배열\n  @observable\n  _uks = [];\n\n  // 현재 입력 되고 있는 정보를 담을 오브젝트\n  @observable\n  _target = {\n    name: '',\n    des: '',\n  };\n\n  // 서버에서 받아온 질문 리스트를 담을 배열\n  @observable\n  _questions = [];\n\n  // 현재 입력 되고 있는 질문\n  @observable\n  _question = '';\n\n  @computed\n  get uks() {\n    return toJS(this._uks);\n  }\n\n  @computed\n  get target() {\n    return toJS(this._target);\n  }\n\n  @computed\n  get questions() {\n    return toJS(this._questions);\n  }\n\n  @computed\n  get question() {\n    return this._question;\n  }\n\n  @action\n  clear() {\n    this._target = {\n      name: '',\n      des: '',\n    };\n  }\n\n  @action\n  funcTargetOnChange(key, value) {\n    this._target = {\n      ...this._target,\n      [key]: value,\n    };\n  }\n\n  @action\n  funcQuestionChange(question) {\n    this._question = question;\n  }\n\n  @action\n  funcAddQuestion(question) {\n    this._questions.push(question);\n    this._question = '';\n  }\n\n  @action\n  funcRemoveQuestion(id) {\n    let index = this._questions.findIndex(question => question.id === id);\n    if (index > -1) {\n      this._questions.splice(index, 1);\n    }\n  }\n\n  @action\n  funcKeyPress(event, question) {\n    if (event.key === 'Enter') {\n      this.funcAddQuestion(question);\n    }\n  }\n}\n\nexport default new UkStore();\n"]},"metadata":{},"sourceType":"module"}