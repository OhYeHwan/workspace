{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _debounce = _interopRequireDefault(require(\"../utils/debounce\"));\n\nvar _useForkRef = _interopRequireDefault(require(\"../utils/useForkRef\"));\n\nvar _useEnhancedEffect = _interopRequireDefault(require(\"../utils/useEnhancedEffect\"));\n\nvar _ownerWindow = _interopRequireDefault(require(\"../utils/ownerWindow\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nfunction getStyleValue(computedStyle, property) {\n  return parseInt(computedStyle[property], 10) || 0;\n}\n\nconst styles = {\n  /* Styles applied to the shadow textarea element. */\n  shadow: {\n    // Visibility needed to hide the extra text area on iPads\n    visibility: 'hidden',\n    // Remove from the content flow\n    position: 'absolute',\n    // Ignore the scrollbar width\n    overflow: 'hidden',\n    height: 0,\n    top: 0,\n    left: 0,\n    // Create a new layer, increase the isolation of the computed values\n    transform: 'translateZ(0)'\n  }\n};\nconst TextareaAutosize = /*#__PURE__*/React.forwardRef(function TextareaAutosize(props, ref) {\n  const {\n    onChange,\n    maxRows,\n    minRows = 1,\n    style,\n    value\n  } = props,\n        other = (0, _objectWithoutPropertiesLoose2.default)(props, [\"onChange\", \"maxRows\", \"minRows\", \"style\", \"value\"]);\n  const {\n    current: isControlled\n  } = React.useRef(value != null);\n  const inputRef = React.useRef(null);\n  const handleRef = (0, _useForkRef.default)(ref, inputRef);\n  const shadowRef = React.useRef(null);\n  const renders = React.useRef(0);\n  const [state, setState] = React.useState({});\n  const syncHeight = React.useCallback(() => {\n    const input = inputRef.current;\n    const containerWindow = (0, _ownerWindow.default)(input);\n    const computedStyle = containerWindow.getComputedStyle(input); // If input's width is shrunk and it's not visible, don't sync height.\n\n    if (computedStyle.width === '0px') {\n      return;\n    }\n\n    const inputShallow = shadowRef.current;\n    inputShallow.style.width = computedStyle.width;\n    inputShallow.value = input.value || props.placeholder || 'x';\n\n    if (inputShallow.value.slice(-1) === '\\n') {\n      // Certain fonts which overflow the line height will cause the textarea\n      // to report a different scrollHeight depending on whether the last line\n      // is empty. Make it non-empty to avoid this issue.\n      inputShallow.value += ' ';\n    }\n\n    const boxSizing = computedStyle['box-sizing'];\n    const padding = getStyleValue(computedStyle, 'padding-bottom') + getStyleValue(computedStyle, 'padding-top');\n    const border = getStyleValue(computedStyle, 'border-bottom-width') + getStyleValue(computedStyle, 'border-top-width'); // The height of the inner content\n\n    const innerHeight = inputShallow.scrollHeight; // Measure height of a textarea with a single row\n\n    inputShallow.value = 'x';\n    const singleRowHeight = inputShallow.scrollHeight; // The height of the outer content\n\n    let outerHeight = innerHeight;\n\n    if (minRows) {\n      outerHeight = Math.max(Number(minRows) * singleRowHeight, outerHeight);\n    }\n\n    if (maxRows) {\n      outerHeight = Math.min(Number(maxRows) * singleRowHeight, outerHeight);\n    }\n\n    outerHeight = Math.max(outerHeight, singleRowHeight); // Take the box sizing into account for applying this value as a style.\n\n    const outerHeightStyle = outerHeight + (boxSizing === 'border-box' ? padding + border : 0);\n    const overflow = Math.abs(outerHeight - innerHeight) <= 1;\n    setState(prevState => {\n      // Need a large enough difference to update the height.\n      // This prevents infinite rendering loop.\n      if (renders.current < 20 && (outerHeightStyle > 0 && Math.abs((prevState.outerHeightStyle || 0) - outerHeightStyle) > 1 || prevState.overflow !== overflow)) {\n        renders.current += 1;\n        return {\n          overflow,\n          outerHeightStyle\n        };\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (renders.current === 20) {\n          console.error(['Material-UI: Too many re-renders. The layout is unstable.', 'TextareaAutosize limits the number of renders to prevent an infinite loop.'].join('\\n'));\n        }\n      }\n\n      return prevState;\n    });\n  }, [maxRows, minRows, props.placeholder]);\n  React.useEffect(() => {\n    const handleResize = (0, _debounce.default)(() => {\n      renders.current = 0;\n      syncHeight();\n    });\n    const containerWindow = (0, _ownerWindow.default)(inputRef.current);\n    containerWindow.addEventListener('resize', handleResize);\n    return () => {\n      handleResize.clear();\n      containerWindow.removeEventListener('resize', handleResize);\n    };\n  }, [syncHeight]);\n  (0, _useEnhancedEffect.default)(() => {\n    syncHeight();\n  });\n  React.useEffect(() => {\n    renders.current = 0;\n  }, [value]);\n\n  const handleChange = event => {\n    renders.current = 0;\n\n    if (!isControlled) {\n      syncHeight();\n    }\n\n    if (onChange) {\n      onChange(event);\n    }\n  };\n\n  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(React.Fragment, {\n    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(\"textarea\", (0, _extends2.default)({\n      value: value,\n      onChange: handleChange,\n      ref: handleRef // Apply the rows prop to get a \"correct\" first SSR paint\n      ,\n      rows: minRows,\n      style: (0, _extends2.default)({\n        height: state.outerHeightStyle,\n        // Need a large enough difference to allow scrolling.\n        // This prevents infinite rendering loop.\n        overflow: state.overflow ? 'hidden' : null\n      }, style)\n    }, other)), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"textarea\", {\n      \"aria-hidden\": true,\n      className: props.className,\n      readOnly: true,\n      ref: shadowRef,\n      tabIndex: -1,\n      style: (0, _extends2.default)({}, styles.shadow, style, {\n        padding: 0\n      })\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TextareaAutosize.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * Maximum number of rows to display.\n   */\n  maxRows: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),\n\n  /**\n   * Minimum number of rows to display.\n   * @default 1\n   */\n  minRows: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),\n\n  /**\n   * @ignore\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * @ignore\n   */\n  placeholder: _propTypes.default.string,\n\n  /**\n   * @ignore\n   */\n  style: _propTypes.default.object,\n\n  /**\n   * @ignore\n   */\n  value: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.string), _propTypes.default.number, _propTypes.default.string])\n} : void 0;\nvar _default = TextareaAutosize;\nexports.default = _default;","map":{"version":3,"sources":["/Users/yh/Desktop/workspace/kdb_studio/node_modules/@material-ui/core/node/TextareaAutosize/TextareaAutosize.js"],"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","default","_extends2","_objectWithoutPropertiesLoose2","React","_propTypes","_debounce","_useForkRef","_useEnhancedEffect","_ownerWindow","_jsxRuntime","getStyleValue","computedStyle","property","parseInt","styles","shadow","visibility","position","overflow","height","top","left","transform","TextareaAutosize","forwardRef","props","ref","onChange","maxRows","minRows","style","other","current","isControlled","useRef","inputRef","handleRef","shadowRef","renders","state","setState","useState","syncHeight","useCallback","input","containerWindow","getComputedStyle","width","inputShallow","placeholder","slice","boxSizing","padding","border","innerHeight","scrollHeight","singleRowHeight","outerHeight","Math","max","Number","min","outerHeightStyle","abs","prevState","process","env","NODE_ENV","console","error","join","useEffect","handleResize","addEventListener","clear","removeEventListener","handleChange","event","jsxs","Fragment","children","jsx","rows","className","readOnly","tabIndex","propTypes","string","oneOfType","number","func","object","arrayOf","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _debounce = _interopRequireDefault(require(\"../utils/debounce\"));\n\nvar _useForkRef = _interopRequireDefault(require(\"../utils/useForkRef\"));\n\nvar _useEnhancedEffect = _interopRequireDefault(require(\"../utils/useEnhancedEffect\"));\n\nvar _ownerWindow = _interopRequireDefault(require(\"../utils/ownerWindow\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nfunction getStyleValue(computedStyle, property) {\n  return parseInt(computedStyle[property], 10) || 0;\n}\n\nconst styles = {\n  /* Styles applied to the shadow textarea element. */\n  shadow: {\n    // Visibility needed to hide the extra text area on iPads\n    visibility: 'hidden',\n    // Remove from the content flow\n    position: 'absolute',\n    // Ignore the scrollbar width\n    overflow: 'hidden',\n    height: 0,\n    top: 0,\n    left: 0,\n    // Create a new layer, increase the isolation of the computed values\n    transform: 'translateZ(0)'\n  }\n};\nconst TextareaAutosize = /*#__PURE__*/React.forwardRef(function TextareaAutosize(props, ref) {\n  const {\n    onChange,\n    maxRows,\n    minRows = 1,\n    style,\n    value\n  } = props,\n        other = (0, _objectWithoutPropertiesLoose2.default)(props, [\"onChange\", \"maxRows\", \"minRows\", \"style\", \"value\"]);\n  const {\n    current: isControlled\n  } = React.useRef(value != null);\n  const inputRef = React.useRef(null);\n  const handleRef = (0, _useForkRef.default)(ref, inputRef);\n  const shadowRef = React.useRef(null);\n  const renders = React.useRef(0);\n  const [state, setState] = React.useState({});\n  const syncHeight = React.useCallback(() => {\n    const input = inputRef.current;\n    const containerWindow = (0, _ownerWindow.default)(input);\n    const computedStyle = containerWindow.getComputedStyle(input); // If input's width is shrunk and it's not visible, don't sync height.\n\n    if (computedStyle.width === '0px') {\n      return;\n    }\n\n    const inputShallow = shadowRef.current;\n    inputShallow.style.width = computedStyle.width;\n    inputShallow.value = input.value || props.placeholder || 'x';\n\n    if (inputShallow.value.slice(-1) === '\\n') {\n      // Certain fonts which overflow the line height will cause the textarea\n      // to report a different scrollHeight depending on whether the last line\n      // is empty. Make it non-empty to avoid this issue.\n      inputShallow.value += ' ';\n    }\n\n    const boxSizing = computedStyle['box-sizing'];\n    const padding = getStyleValue(computedStyle, 'padding-bottom') + getStyleValue(computedStyle, 'padding-top');\n    const border = getStyleValue(computedStyle, 'border-bottom-width') + getStyleValue(computedStyle, 'border-top-width'); // The height of the inner content\n\n    const innerHeight = inputShallow.scrollHeight; // Measure height of a textarea with a single row\n\n    inputShallow.value = 'x';\n    const singleRowHeight = inputShallow.scrollHeight; // The height of the outer content\n\n    let outerHeight = innerHeight;\n\n    if (minRows) {\n      outerHeight = Math.max(Number(minRows) * singleRowHeight, outerHeight);\n    }\n\n    if (maxRows) {\n      outerHeight = Math.min(Number(maxRows) * singleRowHeight, outerHeight);\n    }\n\n    outerHeight = Math.max(outerHeight, singleRowHeight); // Take the box sizing into account for applying this value as a style.\n\n    const outerHeightStyle = outerHeight + (boxSizing === 'border-box' ? padding + border : 0);\n    const overflow = Math.abs(outerHeight - innerHeight) <= 1;\n    setState(prevState => {\n      // Need a large enough difference to update the height.\n      // This prevents infinite rendering loop.\n      if (renders.current < 20 && (outerHeightStyle > 0 && Math.abs((prevState.outerHeightStyle || 0) - outerHeightStyle) > 1 || prevState.overflow !== overflow)) {\n        renders.current += 1;\n        return {\n          overflow,\n          outerHeightStyle\n        };\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (renders.current === 20) {\n          console.error(['Material-UI: Too many re-renders. The layout is unstable.', 'TextareaAutosize limits the number of renders to prevent an infinite loop.'].join('\\n'));\n        }\n      }\n\n      return prevState;\n    });\n  }, [maxRows, minRows, props.placeholder]);\n  React.useEffect(() => {\n    const handleResize = (0, _debounce.default)(() => {\n      renders.current = 0;\n      syncHeight();\n    });\n    const containerWindow = (0, _ownerWindow.default)(inputRef.current);\n    containerWindow.addEventListener('resize', handleResize);\n    return () => {\n      handleResize.clear();\n      containerWindow.removeEventListener('resize', handleResize);\n    };\n  }, [syncHeight]);\n  (0, _useEnhancedEffect.default)(() => {\n    syncHeight();\n  });\n  React.useEffect(() => {\n    renders.current = 0;\n  }, [value]);\n\n  const handleChange = event => {\n    renders.current = 0;\n\n    if (!isControlled) {\n      syncHeight();\n    }\n\n    if (onChange) {\n      onChange(event);\n    }\n  };\n\n  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(React.Fragment, {\n    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(\"textarea\", (0, _extends2.default)({\n      value: value,\n      onChange: handleChange,\n      ref: handleRef // Apply the rows prop to get a \"correct\" first SSR paint\n      ,\n      rows: minRows,\n      style: (0, _extends2.default)({\n        height: state.outerHeightStyle,\n        // Need a large enough difference to allow scrolling.\n        // This prevents infinite rendering loop.\n        overflow: state.overflow ? 'hidden' : null\n      }, style)\n    }, other)), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"textarea\", {\n      \"aria-hidden\": true,\n      className: props.className,\n      readOnly: true,\n      ref: shadowRef,\n      tabIndex: -1,\n      style: (0, _extends2.default)({}, styles.shadow, style, {\n        padding: 0\n      })\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TextareaAutosize.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * Maximum number of rows to display.\n   */\n  maxRows: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),\n\n  /**\n   * Minimum number of rows to display.\n   * @default 1\n   */\n  minRows: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),\n\n  /**\n   * @ignore\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * @ignore\n   */\n  placeholder: _propTypes.default.string,\n\n  /**\n   * @ignore\n   */\n  style: _propTypes.default.object,\n\n  /**\n   * @ignore\n   */\n  value: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.string), _propTypes.default.number, _propTypes.default.string])\n} : void 0;\nvar _default = TextareaAutosize;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}