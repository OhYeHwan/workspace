{"ast":null,"code":"import _initializerDefineProperty from \"/Users/yh/Desktop/github/workspace/kdb_studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/yh/Desktop/github/workspace/kdb_studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/yh/Desktop/github/workspace/kdb_studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2;\n\nimport { observable, makeObservable, action, computed, toJS } from 'mobx';\nimport generateId from '../../IDGenerator';\nlet ExStore = (_class = class ExStore {\n  constructor() {\n    _initializerDefineProperty(this, \"_target\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"_data\", _descriptor2, this);\n\n    makeObservable(this);\n  }\n\n  get target() {\n    return toJS(this._target);\n  }\n\n  funcSelected(target) {\n    this._target = target;\n    console.log(target);\n  }\n\n  get data() {\n    return toJS(this._data);\n  }\n\n  funcAddRootUk() {\n    let tmp = generateId(5);\n    let object = {\n      id: tmp,\n      name: tmp\n    };\n\n    this._data.push(object);\n  }\n\n  funcAddChildUk() {\n    // 선택한 uk의 children을 추가한 target 생성\n    this.funcChangeTarget(); // 1 디렉토리에 추가할 경우\n\n    let findindex = this._data.findIndex(i => i.id === this._target.id);\n\n    this._data.splice(findindex, 1, this._target); // 2 디렉토리에 추가할때\n\n\n    let obj;\n    obj = {\n      id: '1',\n      name: '1',\n      children: [{\n        parent: '1',\n        id: '2',\n        name: '2',\n        children: [this._target]\n      }, {\n        parent: '1',\n        id: '3',\n        name: '3',\n        children: [{\n          parent: '3',\n          id: '4',\n          name: '4'\n        }]\n      }]\n    };\n\n    this._data.splice(findindex, 1, obj);\n  }\n\n  funcFindeIndex() {}\n\n  funcChangeTarget() {\n    let tmp = generateId(5);\n    let child = {\n      id: tmp,\n      name: tmp\n    };\n    const haveChildren = ('children' in this._target);\n\n    if (haveChildren === true) {\n      this._target = { ...this._target,\n        ...this._target.children.push(child)\n      };\n    } else {\n      this._target = { ...this._target,\n        children: [child]\n      };\n    }\n\n    console.log(toJS(this._target));\n  }\n\n}, (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"_target\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return {\n      root: null,\n      parent: null,\n      id: null,\n      name: '',\n      children: []\n    };\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"target\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"target\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"funcSelected\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"funcSelected\"), _class.prototype), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"_data\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [{\n      id: '1',\n      name: '1',\n      children: [{\n        parent: '1',\n        id: '2',\n        name: '2',\n        children: [{\n          parent: '2',\n          id: '8',\n          name: '8'\n        }]\n      }, {\n        parent: '1',\n        id: '3',\n        name: '3',\n        children: [{\n          parent: '3',\n          id: '4',\n          name: '4'\n        }]\n      }]\n    } // {\n    //   id: '9',\n    //   name: '9',\n    //   children: [\n    //     {\n    //       id: '5',\n    //       name: '5',\n    //     },\n    //     {\n    //       id: '6',\n    //       name: '6',\n    //       children: [\n    //         {\n    //           id: '7',\n    //           name: '7',\n    //         },\n    //       ],\n    //     },\n    //   ],\n    // },\n    ];\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"data\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"data\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"funcAddRootUk\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"funcAddRootUk\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"funcAddChildUk\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"funcAddChildUk\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"funcFindeIndex\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"funcFindeIndex\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"funcChangeTarget\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"funcChangeTarget\"), _class.prototype)), _class);\nexport default new ExStore();","map":{"version":3,"sources":["/Users/yh/Desktop/github/workspace/kdb_studio/src/uk/store/ExStore.js"],"names":["observable","makeObservable","action","computed","toJS","generateId","ExStore","constructor","target","_target","funcSelected","console","log","data","_data","funcAddRootUk","tmp","object","id","name","push","funcAddChildUk","funcChangeTarget","findindex","findIndex","i","splice","obj","children","parent","funcFindeIndex","child","haveChildren","root"],"mappings":"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","sourcesContent":["import { observable, makeObservable, action, computed, toJS } from 'mobx';\nimport generateId from '../../IDGenerator';\n\nclass ExStore {\n  constructor() {\n    makeObservable(this);\n  }\n\n  @observable\n  _target = {\n    root: null,\n    parent: null,\n    id: null,\n    name: '',\n    children: [],\n  };\n\n  @computed\n  get target() {\n    return toJS(this._target);\n  }\n\n  @action\n  funcSelected(target) {\n    this._target = target;\n    console.log(target);\n  }\n\n  @observable\n  _data = [\n    {\n      id: '1',\n      name: '1',\n      children: [\n        {\n          parent: '1',\n          id: '2',\n          name: '2',\n          children: [\n            {\n              parent: '2',\n              id: '8',\n              name: '8',\n            },\n          ],\n        },\n        {\n          parent: '1',\n          id: '3',\n          name: '3',\n          children: [\n            {\n              parent: '3',\n              id: '4',\n              name: '4',\n            },\n          ],\n        },\n      ],\n    },\n    // {\n    //   id: '9',\n    //   name: '9',\n    //   children: [\n    //     {\n    //       id: '5',\n    //       name: '5',\n    //     },\n    //     {\n    //       id: '6',\n    //       name: '6',\n    //       children: [\n    //         {\n    //           id: '7',\n    //           name: '7',\n    //         },\n    //       ],\n    //     },\n    //   ],\n    // },\n  ];\n\n  @computed\n  get data() {\n    return toJS(this._data);\n  }\n\n  @action\n  funcAddRootUk() {\n    let tmp = generateId(5);\n    let object = {\n      id: tmp,\n      name: tmp,\n    };\n    this._data.push(object);\n  }\n\n  @action\n  funcAddChildUk() {\n    // 선택한 uk의 children을 추가한 target 생성\n    this.funcChangeTarget();\n\n    // 1 디렉토리에 추가할 경우\n    let findindex = this._data.findIndex(i => i.id === this._target.id);\n    this._data.splice(findindex, 1, this._target);\n\n    // 2 디렉토리에 추가할때\n    let obj;\n    obj = {\n      id: '1',\n      name: '1',\n      children: [\n        {\n          parent: '1',\n          id: '2',\n          name: '2',\n          children: [this._target],\n        },\n        {\n          parent: '1',\n          id: '3',\n          name: '3',\n          children: [\n            {\n              parent: '3',\n              id: '4',\n              name: '4',\n            },\n          ],\n        },\n      ],\n    };\n    this._data.splice(findindex, 1, obj);\n  }\n\n  @action\n  funcFindeIndex() {}\n\n  @action\n  funcChangeTarget() {\n    let tmp = generateId(5);\n    let child = {\n      id: tmp,\n      name: tmp,\n    };\n\n    const haveChildren = 'children' in this._target;\n\n    if (haveChildren === true) {\n      this._target = {\n        ...this._target,\n        ...this._target.children.push(child),\n      };\n    } else {\n      this._target = {\n        ...this._target,\n        children: [child],\n      };\n    }\n    console.log(toJS(this._target));\n  }\n}\n\nexport default new ExStore();\n"]},"metadata":{},"sourceType":"module"}