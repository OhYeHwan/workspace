{"ast":null,"code":"var _jsxFileName = \"/Users/yh/Desktop/workspace/kdb_studio/src/sidebar.jsx\";\nimport React, { Component } from 'react';\nimport { withStyles, createMuiTheme } from \"@material-ui/core/styles\";\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport { Box, Divider, Drawer, List, ListItem, Toolbar } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createMuiTheme();\nconst styles = {\n  root: {\n    display: 'flex',\n    zIndex: theme.zIndex.drawer - 100\n  },\n  drawer: {\n    width: 60\n  },\n  drawerPaper: {\n    width: 60,\n    overflow: 'hidden'\n  }\n};\n\nclass Sidebar extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      className: this.props.classes.root,\n      children: /*#__PURE__*/_jsxDEV(Drawer, {\n        variant: \"permanent\",\n        className: this.props.classes.drawer,\n        classes: {\n          paper: this.props.classes.drawerPaper\n        },\n        children: [/*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(List, {\n            children: ['Add', 'Inbox'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              children: /*#__PURE__*/_jsxDEV(ListItemIcon, {\n                children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(AddBoxIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 66\n                }, this) : /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 83\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 33\n              }, this)\n            }, text, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: ['Add', 'Inbox'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              children: /*#__PURE__*/_jsxDEV(ListItemIcon, {\n                children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(AddBoxIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 66\n                }, this) : /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 83\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 33\n              }, this)\n            }, text, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default withStyles(styles)(Sidebar);","map":{"version":3,"sources":["/Users/yh/Desktop/workspace/kdb_studio/src/sidebar.jsx"],"names":["React","Component","withStyles","createMuiTheme","AddBoxIcon","InboxIcon","Box","Divider","Drawer","List","ListItem","Toolbar","ListItemIcon","theme","styles","root","display","zIndex","drawer","width","drawerPaper","overflow","Sidebar","render","props","classes","paper","map","text","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,0BAA3C;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,SAASC,GAAT,EAAcC,OAAd,EAAuBC,MAAvB,EAA+BC,IAA/B,EAAqCC,QAArC,EAA+CC,OAA/C,QAA8D,mBAA9D;AACA,OAAOC,YAAP,MAAyB,gCAAzB;;AAEA,MAAMC,KAAK,GAAGV,cAAc,EAA5B;AAEA,MAAMW,MAAM,GAAG;AACXC,EAAAA,IAAI,EAAE;AACFC,IAAAA,OAAO,EAAE,MADP;AAEFC,IAAAA,MAAM,EAAEJ,KAAK,CAACI,MAAN,CAAaC,MAAb,GAAsB;AAF5B,GADK;AAKXA,EAAAA,MAAM,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH,GALG;AAQXC,EAAAA,WAAW,EAAE;AACTD,IAAAA,KAAK,EAAE,EADE;AAETE,IAAAA,QAAQ,EAAE;AAFD;AARF,CAAf;;AAcA,MAAMC,OAAN,SAAsBrB,SAAtB,CAAgC;AAC5BsB,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,GAAD;AAAK,MAAA,SAAS,EAAE,KAAKC,KAAL,CAAWC,OAAX,CAAmBV,IAAnC;AAAA,6BACI,QAAC,MAAD;AACI,QAAA,OAAO,EAAC,WADZ;AAEI,QAAA,SAAS,EAAE,KAAKS,KAAL,CAAWC,OAAX,CAAmBP,MAFlC;AAGI,QAAA,OAAO,EAAE;AACLQ,UAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,OAAX,CAAmBL;AADrB,SAHb;AAAA,gCAOA,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAPA,eAQA,QAAC,GAAD;AAAA,kCACI,QAAC,IAAD;AAAA,sBACK,CAAC,KAAD,EAAQ,OAAR,EAAiBO,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,kBAClB,QAAC,QAAD;AAAU,cAAA,MAAM,MAAhB;AAAA,qCACI,QAAC,YAAD;AAAA,0BAAeA,KAAK,GAAG,CAAR,KAAc,CAAd,gBAAkB,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,wBAAlB,gBAAmC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAlD;AAAA;AAAA;AAAA;AAAA;AADJ,eAAsBD,IAAtB;AAAA;AAAA;AAAA;AAAA,oBADH;AADL;AAAA;AAAA;AAAA;AAAA,kBADJ,eAQI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,kBARJ,eASI,QAAC,IAAD;AAAA,sBACK,CAAC,KAAD,EAAQ,OAAR,EAAiBD,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,kBAClB,QAAC,QAAD;AAAU,cAAA,MAAM,MAAhB;AAAA,qCACI,QAAC,YAAD;AAAA,0BAAeA,KAAK,GAAG,CAAR,KAAc,CAAd,gBAAkB,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,wBAAlB,gBAAmC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAlD;AAAA;AAAA;AAAA;AAAA;AADJ,eAAsBD,IAAtB;AAAA;AAAA;AAAA;AAAA,oBADH;AADL;AAAA;AAAA;AAAA;AAAA,kBATJ,eAgBI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,kBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBARA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AA+BH;;AAjC2B;;AAoChC,eAAe1B,UAAU,CAACY,MAAD,CAAV,CAAmBQ,OAAnB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { withStyles, createMuiTheme } from \"@material-ui/core/styles\"\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport { Box, Divider, Drawer, List, ListItem, Toolbar } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\n\nconst theme = createMuiTheme();\n\nconst styles = {\n    root: {\n        display: 'flex',\n        zIndex: theme.zIndex.drawer - 100,\n    },\n    drawer: {\n        width: 60,\n    },\n    drawerPaper: {\n        width: 60,\n        overflow: 'hidden',\n    },\n}\n\nclass Sidebar extends Component {\n    render() {\n        return (\n            <Box className={this.props.classes.root}>\n                <Drawer\n                    variant=\"permanent\"\n                    className={this.props.classes.drawer}\n                    classes={{\n                        paper: this.props.classes.drawerPaper,\n                    }}\n                >\n                <Toolbar />\n                <Box>\n                    <List>\n                        {['Add', 'Inbox'].map((text, index) => (\n                            <ListItem button key={text}>\n                                <ListItemIcon>{index % 2 === 0 ? <AddBoxIcon /> : <InboxIcon />}</ListItemIcon>\n                            </ListItem>\n                        ))}\n                    </List>\n                    <Divider />\n                    <List>\n                        {['Add', 'Inbox'].map((text, index) => (\n                            <ListItem button key={text}>\n                                <ListItemIcon>{index % 2 === 0 ? <AddBoxIcon /> : <InboxIcon />}</ListItemIcon>\n                            </ListItem>\n                        ))}\n                    </List>\n                    <Divider />\n                </Box>\n                </Drawer>\n            </Box>\n        );\n    }\n}\n\nexport default withStyles(styles)(Sidebar);"]},"metadata":{},"sourceType":"module"}