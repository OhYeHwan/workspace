{"ast":null,"code":"import _initializerDefineProperty from \"/Users/yh/Desktop/workspace/kdb_studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/yh/Desktop/workspace/kdb_studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/yh/Desktop/workspace/kdb_studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2;\n\nimport { observable, action, computed, makeObservable, toJS } from 'mobx';\nlet EkdbStore = (_class = class EkdbStore {\n  // 데코레이터기법을 사용하기 위해서\n  // makeObservable 선언\n  constructor() {\n    _initializerDefineProperty(this, \"_ekdb\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"_ekdbs\", _descriptor2, this);\n\n    makeObservable(this);\n  } // 관찰되어질\n  // ekdb 정보\n\n\n  // ekdb 접근 getter 함수\n  get ekdb() {\n    return this._ekdb;\n  } //toJS사용이유\n\n\n  get ekdbs() {\n    return toJS(this._ekdbs);\n  } // ekdb 정보 설정 함수\n\n\n  setEKDBProps(name, value) {\n    this._ekdb = { ...this._ekdb,\n      [name]: value\n    };\n  } // ekdbs 배열 값 설정 함수\n\n\n  setEKDBs(ekdbs) {\n    this._ekdbs = [...ekdbs];\n  }\n\n}, (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"_ekdb\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return {};\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"_ekdbs\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"ekdbs\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"ekdbs\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setEKDBProps\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setEKDBProps\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setEKDBs\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setEKDBs\"), _class.prototype)), _class);\nexport default new EkdbStore();","map":{"version":3,"sources":["/Users/yh/Desktop/workspace/kdb_studio/src/ekdb/store/EkdbStore.js"],"names":["observable","action","computed","makeObservable","toJS","EkdbStore","constructor","ekdb","_ekdb","ekdbs","_ekdbs","setEKDBProps","name","value","setEKDBs"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,QAA7B,EAAuCC,cAAvC,EAAuDC,IAAvD,QAAmE,MAAnE;IAEMC,S,aAAN,MAAMA,SAAN,CAAgB;AACd;AACA;AACAC,EAAAA,WAAW,GAAG;AAAA;;AAAA;;AACZH,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GALa,CAOd;AACA;;;AASA;AACQ,MAAJI,IAAI,GAAG;AACT,WAAO,KAAKC,KAAZ;AACD,GApBa,CAsBd;;;AAES,MAALC,KAAK,GAAG;AACV,WAAOL,IAAI,CAAC,KAAKM,MAAN,CAAX;AACD,GA1Ba,CA4Bd;;;AAEAC,EAAAA,YAAY,CAACC,IAAD,EAAOC,KAAP,EAAc;AACxB,SAAKL,KAAL,GAAa,EACX,GAAG,KAAKA,KADG;AAEX,OAACI,IAAD,GAAQC;AAFG,KAAb;AAID,GAnCa,CAqCd;;;AAEAC,EAAAA,QAAQ,CAACL,KAAD,EAAQ;AACd,SAAKC,MAAL,GAAc,CAAC,GAAGD,KAAJ,CAAd;AACD;;AAzCa,C,uEASbT,U;;;;;WACO,E;;0EAIPA,U;;;;;WACQ,E;;0DAQRE,Q,+IAMAD,M,kJASAA,M;AAMH,eAAe,IAAII,SAAJ,EAAf","sourcesContent":["import { observable, action, computed, makeObservable, toJS } from 'mobx';\n\nclass EkdbStore {\n  // 데코레이터기법을 사용하기 위해서\n  // makeObservable 선언\n  constructor() {\n    makeObservable(this);\n  }\n\n  // 관찰되어질\n  // ekdb 정보\n  @observable\n  _ekdb = {};\n\n  // 관찰 되어질\n  // ekdb 목록 배열\n  @observable\n  _ekdbs = [];\n\n  // ekdb 접근 getter 함수\n  get ekdb() {\n    return this._ekdb;\n  }\n\n  //toJS사용이유\n  @computed\n  get ekdbs() {\n    return toJS(this._ekdbs);\n  }\n\n  // ekdb 정보 설정 함수\n  @action\n  setEKDBProps(name, value) {\n    this._ekdb = {\n      ...this._ekdb,\n      [name]: value,\n    };\n  }\n\n  // ekdbs 배열 값 설정 함수\n  @action\n  setEKDBs(ekdbs) {\n    this._ekdbs = [...ekdbs];\n  }\n}\n\nexport default new EkdbStore();\n"]},"metadata":{},"sourceType":"module"}