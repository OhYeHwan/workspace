{"ast":null,"code":"import _initializerDefineProperty from \"/Users/yh/Desktop/github/workspace/kdb_studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/yh/Desktop/github/workspace/kdb_studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/yh/Desktop/github/workspace/kdb_studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4;\n\nimport { observable, makeObservable, action, computed, toJS } from 'mobx';\nimport generateId from '../../IDGenerator';\nlet ExStore = (_class = class ExStore {\n  constructor() {\n    _initializerDefineProperty(this, \"_target\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"beforeData\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"afterData\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"_data\", _descriptor4, this);\n\n    makeObservable(this);\n  }\n\n  get target() {\n    return toJS(this._target);\n  }\n\n  funcSelected(target) {\n    this._target = target;\n  }\n\n  funcTreeModel(arrayList, rootId) {\n    let rootNodes = [];\n\n    let traverse = function (nodes, item, index) {\n      if (nodes instanceof Array) {\n        return nodes.some(function (node) {\n          if (node.id === item.parentId) {\n            node.children = node.children || [];\n            return node.children.push(arrayList.splice(index, 1)[0]);\n          }\n\n          return traverse(node.children, item, index);\n        });\n      }\n    };\n\n    while (arrayList.length > 0) {\n      arrayList.some(function (item, index) {\n        if (item.parentId === rootId) {\n          return rootNodes.push(arrayList.splice(index, 1)[0]);\n        }\n\n        return traverse(rootNodes, item, index);\n      });\n    }\n\n    console.log(rootNodes);\n    return rootNodes;\n  }\n\n  funcBokje() {\n    let dataBokje = this.beforeData;\n    let afterData = this.funcTreeModel(dataBokje, 'root');\n    let data = afterData.filter(i => i.id !== 'root');\n    return data;\n  }\n\n  //[\n  // {\n  //   id: '1',\n  //   name: '1',\n  //   children: [\n  //     {\n  //       id: '2',\n  //       name: '2',\n  //       children: [\n  //         {\n  //           id: '8',\n  //           name: '8',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       id: '3',\n  //       name: '3',\n  //       children: [\n  //         {\n  //           id: '4',\n  //           name: '4',\n  //         },\n  //       ],\n  //     },\n  //   ],\n  // },\n  // {\n  //   id: '9',\n  //   name: '9',\n  //   children: [\n  //     {\n  //       id: '5',\n  //       name: '5',\n  //     },\n  //     {\n  //       id: '6',\n  //       name: '6',\n  //       children: [\n  //         {\n  //           id: '7',\n  //           name: '7',\n  //         },\n  //       ],\n  //     },\n  //   ],\n  // },\n  //];\n  get data() {\n    return toJS(this._data);\n  }\n\n  funcAddRootUk() {\n    console.log('1');\n    let tmp = generateId(5);\n    let object = {\n      parentId: 'root',\n      id: tmp,\n      name: tmp\n    };\n    this.beforeData.push(object);\n    console.log(toJS(this.beforeData));\n  }\n\n  funcAddChildUk() {\n    this.funcChangeTarget();\n  } //   @action\n  //   funcFindeIndex() {\n  //     // 선택한 uk의 children을 추가한 target 생성\n  //     this.funcChangeTarget();\n  //     // 1 디렉토리에 추가할 경우\n  //     let findindex = this._data.findIndex(i => i.id === this._target.id);\n  //     this._data.splice(findindex, 1, this._target);\n  //     // 2 디렉토리에 추가할때\n  //     let rootIndex = this._data.findIndex(i => i.id === this._target.parent);\n  //     let obj = this._data.find(i => i.id === this._target.parent);\n  //     let findindex2 = obj.children.findIndex(i => i.id === this._target.id);\n  //     obj.children.splice(findindex2, 1, this._target);\n  //     this._data.splice(rootIndex, 1, obj);\n  //     // 3 디렉토리에 추가할때\n  //     let rootIndex2 = this._data.findIndex(i => i.id === this._tareget.root);\n  //     let obj2 = this._data.find(i => i.id === this._target.root);\n  //     let obj3 = obj2.children.find(i => i.id === this._target.parent);\n  //     let findindex3 = obj2.children.map(i => i.id === this._target.parent);\n  //     let findindex4 = obj3.children.findIndex(i => i.id === this._target.id);\n  //     obj3.children.splice(findindex4, 1, this._target);\n  //     obj2.children.splice(findindex3, 1, obj3);\n  //     this._data.splice(rootIndex2, 1, obj2);\n  //     // 4 디렉토리 추가할때\n  //     // 현재 선택한 아이템의 루트가 일치할때 인덱스 저장\n  //   }\n\n\n  funcChangeTarget() {\n    let tmp = generateId(5);\n    let child = {\n      id: tmp,\n      name: tmp\n    };\n    const haveChildren = ('children' in this._target);\n\n    if (haveChildren === true) {\n      this._target = { ...this._target,\n        ...this._target.children.push(child)\n      };\n    } else {\n      this._target = { ...this._target,\n        children: [child]\n      };\n    }\n\n    console.log(toJS(this._target));\n\n    let ff = this._data.findIndex(i => i.id === this._target.id);\n\n    this._data.splice(ff, 1, this._target);\n  }\n\n}, (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"_target\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return {\n      root: null,\n      parent: null,\n      id: null,\n      name: '',\n      children: []\n    };\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"target\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"target\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"funcSelected\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"funcSelected\"), _class.prototype), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"beforeData\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [{\n      parentId: 'root',\n      id: 'root'\n    }, {\n      parentId: 'root',\n      id: '1',\n      name: '1'\n    }, {\n      parentId: '1',\n      id: '2',\n      name: '2'\n    }, {\n      parentId: '1',\n      id: '3',\n      name: '3'\n    }, {\n      parentId: '1',\n      id: '4',\n      name: '4'\n    }, {\n      parentId: '2',\n      id: '5',\n      name: '5'\n    }, {\n      parentId: '2',\n      id: '6',\n      name: '6'\n    }, {\n      parentId: '1',\n      id: '10',\n      name: '10'\n    }, {\n      parentId: 'root',\n      id: '21',\n      name: '21'\n    }, {\n      parentId: '21',\n      id: '22',\n      name: '22'\n    }];\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"funcTreeModel\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"funcTreeModel\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"funcBokje\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"funcBokje\"), _class.prototype), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"afterData\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return this.funcTreeModel(this.beforeData, 'root');\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"_data\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return this.funcBokje();\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"data\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"data\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"funcAddRootUk\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"funcAddRootUk\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"funcAddChildUk\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"funcAddChildUk\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"funcChangeTarget\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"funcChangeTarget\"), _class.prototype)), _class);\nexport default new ExStore();","map":{"version":3,"sources":["/Users/yh/Desktop/github/workspace/kdb_studio/src/uk/store/ExStore.js"],"names":["observable","makeObservable","action","computed","toJS","generateId","ExStore","constructor","target","_target","funcSelected","funcTreeModel","arrayList","rootId","rootNodes","traverse","nodes","item","index","Array","some","node","id","parentId","children","push","splice","length","console","log","funcBokje","dataBokje","beforeData","afterData","data","filter","i","_data","funcAddRootUk","tmp","object","name","funcAddChildUk","funcChangeTarget","child","haveChildren","ff","findIndex","root","parent"],"mappings":"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","sourcesContent":["import { observable, makeObservable, action, computed, toJS } from 'mobx';\nimport generateId from '../../IDGenerator';\n\nclass ExStore {\n  constructor() {\n    makeObservable(this);\n  }\n\n  @observable\n  _target = {\n    root: null,\n    parent: null,\n    id: null,\n    name: '',\n    children: [],\n  };\n\n  @computed\n  get target() {\n    return toJS(this._target);\n  }\n\n  @action\n  funcSelected(target) {\n    this._target = target;\n  }\n\n  @observable\n  beforeData = [\n    {\n      parentId: 'root',\n      id: 'root',\n    },\n    {\n      parentId: 'root',\n      id: '1',\n      name: '1',\n    },\n    {\n      parentId: '1',\n      id: '2',\n      name: '2',\n    },\n    {\n      parentId: '1',\n      id: '3',\n      name: '3',\n    },\n    {\n      parentId: '1',\n      id: '4',\n      name: '4',\n    },\n    {\n      parentId: '2',\n      id: '5',\n      name: '5',\n    },\n    {\n      parentId: '2',\n      id: '6',\n      name: '6',\n    },\n    {\n      parentId: '1',\n      id: '10',\n      name: '10',\n    },\n    {\n      parentId: 'root',\n      id: '21',\n      name: '21',\n    },\n    {\n      parentId: '21',\n      id: '22',\n      name: '22',\n    },\n  ];\n\n  @action\n  funcTreeModel(arrayList, rootId) {\n    let rootNodes = [];\n\n    let traverse = function (nodes, item, index) {\n      if (nodes instanceof Array) {\n        return nodes.some(function (node) {\n          if (node.id === item.parentId) {\n            node.children = node.children || [];\n            return node.children.push(arrayList.splice(index, 1)[0]);\n          }\n          return traverse(node.children, item, index);\n        });\n      }\n    };\n\n    while (arrayList.length > 0) {\n      arrayList.some(function (item, index) {\n        if (item.parentId === rootId) {\n          return rootNodes.push(arrayList.splice(index, 1)[0]);\n        }\n        return traverse(rootNodes, item, index);\n      });\n    }\n\n    console.log(rootNodes);\n    return rootNodes;\n  }\n\n  @action\n  funcBokje() {\n    let dataBokje = this.beforeData;\n    let afterData = this.funcTreeModel(dataBokje, 'root');\n    let data = afterData.filter(i => i.id !== 'root');\n    return data;\n  }\n\n  @observable\n  afterData = this.funcTreeModel(this.beforeData, 'root');\n\n  @observable\n  _data = this.funcBokje();\n  //[\n  // {\n  //   id: '1',\n  //   name: '1',\n  //   children: [\n  //     {\n  //       id: '2',\n  //       name: '2',\n  //       children: [\n  //         {\n  //           id: '8',\n  //           name: '8',\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       id: '3',\n  //       name: '3',\n  //       children: [\n  //         {\n  //           id: '4',\n  //           name: '4',\n  //         },\n  //       ],\n  //     },\n  //   ],\n  // },\n  // {\n  //   id: '9',\n  //   name: '9',\n  //   children: [\n  //     {\n  //       id: '5',\n  //       name: '5',\n  //     },\n  //     {\n  //       id: '6',\n  //       name: '6',\n  //       children: [\n  //         {\n  //           id: '7',\n  //           name: '7',\n  //         },\n  //       ],\n  //     },\n  //   ],\n  // },\n  //];\n\n  @computed\n  get data() {\n    return toJS(this._data);\n  }\n\n  @action\n  funcAddRootUk() {\n    console.log('1');\n    let tmp = generateId(5);\n    let object = {\n      parentId: 'root',\n      id: tmp,\n      name: tmp,\n    };\n    this.beforeData.push(object);\n    console.log(toJS(this.beforeData));\n  }\n\n  @action\n  funcAddChildUk() {\n    this.funcChangeTarget();\n  }\n\n  //   @action\n  //   funcFindeIndex() {\n  //     // 선택한 uk의 children을 추가한 target 생성\n  //     this.funcChangeTarget();\n\n  //     // 1 디렉토리에 추가할 경우\n  //     let findindex = this._data.findIndex(i => i.id === this._target.id);\n  //     this._data.splice(findindex, 1, this._target);\n\n  //     // 2 디렉토리에 추가할때\n  //     let rootIndex = this._data.findIndex(i => i.id === this._target.parent);\n  //     let obj = this._data.find(i => i.id === this._target.parent);\n\n  //     let findindex2 = obj.children.findIndex(i => i.id === this._target.id);\n  //     obj.children.splice(findindex2, 1, this._target);\n\n  //     this._data.splice(rootIndex, 1, obj);\n\n  //     // 3 디렉토리에 추가할때\n  //     let rootIndex2 = this._data.findIndex(i => i.id === this._tareget.root);\n  //     let obj2 = this._data.find(i => i.id === this._target.root);\n  //     let obj3 = obj2.children.find(i => i.id === this._target.parent);\n\n  //     let findindex3 = obj2.children.map(i => i.id === this._target.parent);\n  //     let findindex4 = obj3.children.findIndex(i => i.id === this._target.id);\n  //     obj3.children.splice(findindex4, 1, this._target);\n  //     obj2.children.splice(findindex3, 1, obj3);\n  //     this._data.splice(rootIndex2, 1, obj2);\n  //     // 4 디렉토리 추가할때\n  //     // 현재 선택한 아이템의 루트가 일치할때 인덱스 저장\n  //   }\n\n  @action\n  funcChangeTarget() {\n    let tmp = generateId(5);\n    let child = {\n      id: tmp,\n      name: tmp,\n    };\n\n    const haveChildren = 'children' in this._target;\n\n    if (haveChildren === true) {\n      this._target = {\n        ...this._target,\n        ...this._target.children.push(child),\n      };\n    } else {\n      this._target = {\n        ...this._target,\n        children: [child],\n      };\n    }\n    console.log(toJS(this._target));\n\n    let ff = this._data.findIndex(i => i.id === this._target.id);\n\n    this._data.splice(ff, 1, this._target);\n  }\n}\n\nexport default new ExStore();\n"]},"metadata":{},"sourceType":"module"}