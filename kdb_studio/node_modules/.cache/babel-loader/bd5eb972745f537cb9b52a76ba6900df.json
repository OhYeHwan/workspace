{"ast":null,"code":"import _initializerDefineProperty from \"/Users/yh/Desktop/github/workspace/kdb_studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/yh/Desktop/github/workspace/kdb_studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/yh/Desktop/github/workspace/kdb_studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2;\n\nimport { observable, makeObservable, action, computed, toJS } from 'mobx';\nimport generateId from '../../IDGenerator';\nlet ExStore = (_class = class ExStore {\n  constructor() {\n    _initializerDefineProperty(this, \"_target\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"_data\", _descriptor2, this);\n\n    makeObservable(this);\n  }\n\n  get target() {\n    return toJS(this._target);\n  }\n\n  funcSelected(target) {\n    this._target = target;\n    console.log(target);\n  }\n\n  get data() {\n    return toJS(this._data);\n  }\n\n  funcAddRootUk() {\n    let tmp = generateId(5);\n    let object = {\n      id: tmp,\n      name: tmp\n    };\n\n    this._data.push(object);\n  }\n\n  funcAddChildUk() {\n    this.funcChangeTarget();\n  }\n\n  funcFindeIndex() {\n    // 선택한 uk의 children을 추가한 target 생성\n    this.funcChangeTarget(); // 1 디렉토리에 추가할 경우\n\n    let findindex = this._data.findIndex(i => i.id === this._target.id);\n\n    this._data.splice(findindex, 1, this._target); // 2 디렉토리에 추가할때\n\n\n    let rootIndex = this._data.findIndex(i => i.id === this._target.parent);\n\n    let obj = this._data.find(i => i.id === this._target.parent);\n\n    let findindex2 = obj.children.findIndex(i => i.id === this._target.id);\n    obj.children.splice(findindex2, 1, this._target);\n\n    this._data.splice(rootIndex, 1, obj); // 3 디렉토리에 추가할때\n\n\n    let rootIndex2 = this._data.findIndex(i => i.id === this._tareget.root);\n\n    let obj2 = this._data.find(i => i.id === this._target.root);\n\n    let findindex3 = obj2.children.map(i => i.id === this._target.parent);\n    let obj3 = obj2.children.find(i => i.id === this._target.parent);\n    let findindex4 = obj3.children.findIndex(i => i.id === this._target.id);\n    obj3.children.splice(findindex4, 1, this._target);\n    obj2.children.splice(findindex3, 1, obj3);\n\n    this._data.splice(rootIndex2, 1, obj2); // 4 디렉토리 추가할때\n    // 현재 선택한 아이템의 루트가 일치할때 인덱스 저장\n\n\n    let rootIndex4 = this._data.findIndex(i => i.id === this._target.root);\n\n    let rootObj = this._data.find(i => i.id === this, _target.root);\n  }\n\n  funcChangeTarget() {\n    let tmp = generateId(5);\n    let child = {\n      id: tmp,\n      name: tmp\n    };\n    const haveChildren = ('children' in this._target);\n\n    if (haveChildren === true) {\n      this._target = { ...this._target,\n        ...this._target.children.push(child)\n      };\n    } else {\n      this._target = { ...this._target,\n        children: [child]\n      };\n    }\n\n    console.log(toJS(this._target));\n  }\n\n}, (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"_target\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return {\n      root: null,\n      parent: null,\n      id: null,\n      name: '',\n      children: []\n    };\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"target\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"target\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"funcSelected\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"funcSelected\"), _class.prototype), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"_data\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [{\n      id: '1',\n      name: '1',\n      children: [{\n        parent: '1',\n        id: '2',\n        name: '2',\n        children: [{\n          root: '1',\n          parent: '2',\n          id: '8',\n          name: '8'\n        }]\n      }, {\n        parent: '1',\n        id: '3',\n        name: '3',\n        children: [{\n          parent: '3',\n          id: '4',\n          name: '4'\n        }]\n      }]\n    } // {\n    //   id: '9',\n    //   name: '9',\n    //   children: [\n    //     {\n    //       id: '5',\n    //       name: '5',\n    //     },\n    //     {\n    //       id: '6',\n    //       name: '6',\n    //       children: [\n    //         {\n    //           id: '7',\n    //           name: '7',\n    //         },\n    //       ],\n    //     },\n    //   ],\n    // },\n    ];\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"data\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"data\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"funcAddRootUk\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"funcAddRootUk\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"funcAddChildUk\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"funcAddChildUk\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"funcFindeIndex\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"funcFindeIndex\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"funcChangeTarget\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"funcChangeTarget\"), _class.prototype)), _class);\nexport default new ExStore();","map":{"version":3,"sources":["/Users/yh/Desktop/github/workspace/kdb_studio/src/uk/store/ExStore.js"],"names":["observable","makeObservable","action","computed","toJS","generateId","ExStore","constructor","target","_target","funcSelected","console","log","data","_data","funcAddRootUk","tmp","object","id","name","push","funcAddChildUk","funcChangeTarget","funcFindeIndex","findindex","findIndex","i","splice","rootIndex","parent","obj","find","findindex2","children","rootIndex2","_tareget","root","obj2","findindex3","map","obj3","findindex4","rootIndex4","rootObj","child","haveChildren"],"mappings":"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","sourcesContent":["import { observable, makeObservable, action, computed, toJS } from 'mobx';\nimport generateId from '../../IDGenerator';\n\nclass ExStore {\n  constructor() {\n    makeObservable(this);\n  }\n\n  @observable\n  _target = {\n    root: null,\n    parent: null,\n    id: null,\n    name: '',\n    children: [],\n  };\n\n  @computed\n  get target() {\n    return toJS(this._target);\n  }\n\n  @action\n  funcSelected(target) {\n    this._target = target;\n    console.log(target);\n  }\n\n  @observable\n  _data = [\n    {\n      id: '1',\n      name: '1',\n      children: [\n        {\n          parent: '1',\n          id: '2',\n          name: '2',\n          children: [\n            {\n              root: '1',\n              parent: '2',\n              id: '8',\n              name: '8',\n            },\n          ],\n        },\n        {\n          parent: '1',\n          id: '3',\n          name: '3',\n          children: [\n            {\n              parent: '3',\n              id: '4',\n              name: '4',\n            },\n          ],\n        },\n      ],\n    },\n    // {\n    //   id: '9',\n    //   name: '9',\n    //   children: [\n    //     {\n    //       id: '5',\n    //       name: '5',\n    //     },\n    //     {\n    //       id: '6',\n    //       name: '6',\n    //       children: [\n    //         {\n    //           id: '7',\n    //           name: '7',\n    //         },\n    //       ],\n    //     },\n    //   ],\n    // },\n  ];\n\n  @computed\n  get data() {\n    return toJS(this._data);\n  }\n\n  @action\n  funcAddRootUk() {\n    let tmp = generateId(5);\n    let object = {\n      id: tmp,\n      name: tmp,\n    };\n    this._data.push(object);\n  }\n\n  @action\n  funcAddChildUk() {\n    this.funcChangeTarget();\n  }\n\n  @action\n  funcFindeIndex() {\n    // 선택한 uk의 children을 추가한 target 생성\n    this.funcChangeTarget();\n\n    // 1 디렉토리에 추가할 경우\n    let findindex = this._data.findIndex(i => i.id === this._target.id);\n    this._data.splice(findindex, 1, this._target);\n\n    // 2 디렉토리에 추가할때\n    let rootIndex = this._data.findIndex(i => i.id === this._target.parent);\n    let obj = this._data.find(i => i.id === this._target.parent);\n    let findindex2 = obj.children.findIndex(i => i.id === this._target.id);\n    obj.children.splice(findindex2, 1, this._target);\n    this._data.splice(rootIndex, 1, obj);\n\n    // 3 디렉토리에 추가할때\n    let rootIndex2 = this._data.findIndex(i => i.id === this._tareget.root);\n    let obj2 = this._data.find(i => i.id === this._target.root);\n    let findindex3 = obj2.children.map(i => i.id === this._target.parent);\n    let obj3 = obj2.children.find(i => i.id === this._target.parent);\n    let findindex4 = obj3.children.findIndex(i => i.id === this._target.id);\n    obj3.children.splice(findindex4, 1, this._target);\n    obj2.children.splice(findindex3, 1, obj3);\n    this._data.splice(rootIndex2, 1, obj2);\n\n    // 4 디렉토리 추가할때\n\n    // 현재 선택한 아이템의 루트가 일치할때 인덱스 저장\n    let rootIndex4 = this._data.findIndex(i => i.id === this._target.root);\n    let rootObj = this._data.find(i => i.id === this, _target.root);\n  }\n\n  @action\n  funcChangeTarget() {\n    let tmp = generateId(5);\n    let child = {\n      id: tmp,\n      name: tmp,\n    };\n\n    const haveChildren = 'children' in this._target;\n\n    if (haveChildren === true) {\n      this._target = {\n        ...this._target,\n        ...this._target.children.push(child),\n      };\n    } else {\n      this._target = {\n        ...this._target,\n        children: [child],\n      };\n    }\n    console.log(toJS(this._target));\n  }\n}\n\nexport default new ExStore();\n"]},"metadata":{},"sourceType":"module"}