{"ast":null,"code":"var _jsxFileName = \"/Users/yh/Desktop/github/workspace/kdb_studio/src/uk/view/ExList.js\",\n    _class;\n\nimport React from 'react';\nimport TreeView from '@material-ui/lab/TreeView';\nimport TreeItem from '@material-ui/lab/TreeItem';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { Box, ListItemIcon, ListItemText, Menu, MenuItem } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { observer } from 'mobx-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet ExList = observer(_class = class ExList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      anchorEl: null,\n      ex: []\n    };\n\n    this.funcAddChildUk = () => {\n      this.props.funcAddChildUk(this.props.target.id);\n      this.handleClose();\n    };\n\n    this.funcSelected = node => {\n      this.props.funcSelected(node);\n    };\n\n    this.funcRemoveUk = () => {\n      this.props.funcRemoveUk(this.props.target.id);\n      this.handleClose();\n    };\n\n    this.handleRightClick = event => {\n      event.preventDefault();\n      this.setState({\n        anchorEl: event.currentTarget\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        anchorEl: null\n      });\n    };\n\n    this.renderTree = node => {\n      const open = Boolean(this.state.anchorEl);\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(TreeItem, {\n          nodeId: node.id,\n          label: node.name,\n          onClick: () => this.funcSelected(node),\n          onContextMenu: event => this.handleRightClick(event) // 토글 되는 것을 방지\n          ,\n          onIconClick: evnet => this.setState({\n            ex: this.state.ex.push(node.id)\n          }),\n          onLabelClick: event => event.preventDefault(),\n          children: Array.isArray(node.children) ? node.children.map(node => this.renderTree(node)) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {\n          id: node.id,\n          anchorEl: this.state.anchorEl,\n          open: open,\n          onClose: this.handleClose,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: this.funcAddChildUk,\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: \"UK \\uCD94\\uAC00\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: this.funcRemoveUk,\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: \"UK \\uC81C\\uAC70\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this)]\n      }, node.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.TreeToArray = node => {\n      let array = [];\n\n      let recursivefunc = node => {\n        array.push(node.id);\n\n        if (Array.isArray(node.children)) {\n          node.children.map(node => recursivefunc(node));\n        }\n      };\n\n      recursivefunc(node);\n      return array;\n    };\n  }\n\n  render() {\n    const {\n      data,\n      target\n    } = this.props;\n    let array = this.TreeToArray(data);\n    return /*#__PURE__*/_jsxDEV(TreeView, {\n      defaultCollapseIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 30\n      }, this),\n      defaultExpandIcon: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 28\n      }, this),\n      expanded: this.state.ex,\n      onNo: true,\n      selected: `${target.id}`,\n      children: this.renderTree(data)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  }\n\n}) || _class;\n\nexport default ExList;","map":{"version":3,"sources":["/Users/yh/Desktop/github/workspace/kdb_studio/src/uk/view/ExList.js"],"names":["React","TreeView","TreeItem","ExpandMoreIcon","ChevronRightIcon","Box","ListItemIcon","ListItemText","Menu","MenuItem","AddIcon","RemoveIcon","observer","ExList","Component","state","anchorEl","ex","funcAddChildUk","props","target","id","handleClose","funcSelected","node","funcRemoveUk","handleRightClick","event","preventDefault","setState","currentTarget","renderTree","open","Boolean","name","evnet","push","Array","isArray","children","map","TreeToArray","array","recursivefunc","render","data"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TreeView from '@material-ui/lab/TreeView';\nimport TreeItem from '@material-ui/lab/TreeItem';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport {\n  Box,\n  ListItemIcon,\n  ListItemText,\n  Menu,\n  MenuItem,\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { observer } from 'mobx-react';\n\n@observer\nclass ExList extends React.Component {\n  state = {\n    anchorEl: null,\n    ex: [],\n  };\n\n  funcAddChildUk = () => {\n    this.props.funcAddChildUk(this.props.target.id);\n    this.handleClose();\n  };\n\n  funcSelected = node => {\n    this.props.funcSelected(node);\n  };\n\n  funcRemoveUk = () => {\n    this.props.funcRemoveUk(this.props.target.id);\n    this.handleClose();\n  };\n\n  handleRightClick = event => {\n    event.preventDefault();\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  renderTree = node => {\n    const open = Boolean(this.state.anchorEl);\n    return (\n      <Box key={node.id}>\n        <TreeItem\n          nodeId={node.id}\n          label={node.name}\n          onClick={() => this.funcSelected(node)}\n          onContextMenu={event => this.handleRightClick(event)}\n          // 토글 되는 것을 방지\n          onIconClick={evnet =>\n            this.setState({ ex: this.state.ex.push(node.id) })\n          }\n          onLabelClick={event => event.preventDefault()}\n        >\n          {Array.isArray(node.children)\n            ? node.children.map(node => this.renderTree(node))\n            : null}\n        </TreeItem>\n        <Menu\n          id={node.id}\n          anchorEl={this.state.anchorEl}\n          open={open}\n          onClose={this.handleClose}\n        >\n          <MenuItem onClick={this.funcAddChildUk}>\n            <ListItemIcon>\n              <AddIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"UK 추가하기\" />\n          </MenuItem>\n          <MenuItem onClick={this.funcRemoveUk}>\n            <ListItemIcon>\n              <RemoveIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"UK 제거하기\" />\n          </MenuItem>\n        </Menu>\n      </Box>\n    );\n  };\n\n  TreeToArray = node => {\n    let array = [];\n    let recursivefunc = node => {\n      array.push(node.id);\n      if (Array.isArray(node.children)) {\n        node.children.map(node => recursivefunc(node));\n      }\n    };\n    recursivefunc(node);\n    return array;\n  };\n\n  render() {\n    const { data, target } = this.props;\n    let array = this.TreeToArray(data);\n    return (\n      <TreeView\n        defaultCollapseIcon={<ExpandMoreIcon />}\n        defaultExpandIcon={<ChevronRightIcon />}\n        expanded={this.state.ex}\n        onNo\n        selected={`${target.id}`}\n      >\n        {this.renderTree(data)}\n      </TreeView>\n    );\n  }\n}\n\nexport default ExList;\n"]},"metadata":{},"sourceType":"module"}