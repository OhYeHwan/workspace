{"ast":null,"code":"import _initializerDefineProperty from \"/Users/yh/Desktop/github/workspace/kdb_studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/yh/Desktop/github/workspace/kdb_studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/yh/Desktop/github/workspace/kdb_studio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2;\n\nimport { observable, action, makeObservable, toJS, computed } from 'mobx';\nimport UkRepository from '../repository/UkRepository';\nlet UkStore = (_class = class UkStore {\n  constructor() {\n    _initializerDefineProperty(this, \"_uks\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"_target\", _descriptor2, this);\n\n    makeObservable(this);\n  } // 서버에서 받아온 uk 리스트를 담을 배열\n\n\n  get uks() {\n    return toJS(this._uks);\n  }\n\n  get target() {\n    return toJS(this._target);\n  }\n\n  clear() {\n    this._target = {\n      id: null,\n      name: '',\n      des: '',\n      question: '',\n      questions: []\n    };\n  } //  **** UK 관련 함수 ****\n\n\n  funcTargetOnChange(key, value) {\n    this._target = { ...this._target,\n      [key]: value\n    };\n  }\n\n  funcSelectedUk(target) {\n    this._target = target;\n  }\n\n  funcAddUk(target) {\n    this._uks.push(target);\n\n    this.funcSelectedUk(target);\n  }\n\n  funcUpdateUk() {\n    let foundUk = this._uks.find(uk => uk.id === this._target.id); // find 주어진 조건을 만족하는 첫번째 요소 값을 반환 else undefined\n\n\n    foundUk.name = this._target.name;\n    foundUk.des = this._target.des;\n    foundUk.questions = this.target.questions;\n  }\n\n  funcRemoveUk(id) {\n    let index = this._uks.findIndex(uk => uk.id === id);\n\n    if (index > -1) {\n      this._uks.splice(index, 1);\n    }\n\n    this.clear();\n  } // **** Question 관련 함수 ****\n\n\n  funcAddQuestion(question) {\n    this._target.questions.push(question);\n\n    this._target.question = '';\n  }\n\n  funcRemoveQuestion(id) {\n    let index = this._target.questions.findIndex(question => question.id === id);\n\n    if (index > -1) {\n      this._target.questions.splice(index, 1);\n    }\n  }\n\n  funcKeyPress(event, question) {\n    if (event.key === 'Enter') {\n      this.funcAddQuestion(question);\n    }\n  } // 서버통신\n\n\n  funcGet() {\n    UkRepository.funcGet().then(action(response => {\n      this._uks = toJS(response);\n      return this._uks;\n    }));\n  }\n\n}, (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"_uks\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"_target\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return {\n      id: null,\n      name: '',\n      des: '',\n      question: '',\n      questions: []\n    };\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"uks\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"uks\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"target\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"target\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"clear\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"clear\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"funcTargetOnChange\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"funcTargetOnChange\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"funcSelectedUk\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"funcSelectedUk\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"funcAddUk\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"funcAddUk\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"funcUpdateUk\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"funcUpdateUk\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"funcRemoveUk\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"funcRemoveUk\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"funcAddQuestion\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"funcAddQuestion\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"funcRemoveQuestion\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"funcRemoveQuestion\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"funcKeyPress\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"funcKeyPress\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"funcGet\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"funcGet\"), _class.prototype)), _class);\nexport default new UkStore();","map":{"version":3,"sources":["/Users/yh/Desktop/github/workspace/kdb_studio/src/uk/store/UkStore.js"],"names":["observable","action","makeObservable","toJS","computed","UkRepository","UkStore","constructor","uks","_uks","target","_target","clear","id","name","des","question","questions","funcTargetOnChange","key","value","funcSelectedUk","funcAddUk","push","funcUpdateUk","foundUk","find","uk","funcRemoveUk","index","findIndex","splice","funcAddQuestion","funcRemoveQuestion","funcKeyPress","event","funcGet","then","response"],"mappings":"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","sourcesContent":["import { observable, action, makeObservable, toJS, computed } from 'mobx';\nimport UkRepository from '../repository/UkRepository';\n\nclass UkStore {\n  constructor() {\n    makeObservable(this);\n  }\n\n  // 서버에서 받아온 uk 리스트를 담을 배열\n  @observable\n  _uks = [];\n\n  // 현재 입력 되고 있는 정보를 담을 오브젝트\n  @observable\n  _target = {\n    id: null,\n    name: '',\n    des: '',\n    question: '',\n    questions: [],\n  };\n\n  @computed\n  get uks() {\n    return toJS(this._uks);\n  }\n\n  @computed\n  get target() {\n    return toJS(this._target);\n  }\n\n  @action\n  clear() {\n    this._target = {\n      id: null,\n      name: '',\n      des: '',\n      question: '',\n      questions: [],\n    };\n  }\n\n  //  **** UK 관련 함수 ****\n\n  @action\n  funcTargetOnChange(key, value) {\n    this._target = {\n      ...this._target,\n      [key]: value,\n    };\n  }\n\n  @action\n  funcSelectedUk(target) {\n    this._target = target;\n  }\n\n  @action\n  funcAddUk(target) {\n    this._uks.push(target);\n    this.funcSelectedUk(target);\n  }\n\n  @action\n  funcUpdateUk() {\n    let foundUk = this._uks.find(uk => uk.id === this._target.id); // find 주어진 조건을 만족하는 첫번째 요소 값을 반환 else undefined\n    foundUk.name = this._target.name;\n    foundUk.des = this._target.des;\n    foundUk.questions = this.target.questions;\n  }\n\n  @action\n  funcRemoveUk(id) {\n    let index = this._uks.findIndex(uk => uk.id === id);\n    if (index > -1) {\n      this._uks.splice(index, 1);\n    }\n    this.clear();\n  }\n\n  // **** Question 관련 함수 ****\n  @action\n  funcAddQuestion(question) {\n    this._target.questions.push(question);\n    this._target.question = '';\n  }\n\n  @action\n  funcRemoveQuestion(id) {\n    let index = this._target.questions.findIndex(\n      question => question.id === id,\n    );\n    if (index > -1) {\n      this._target.questions.splice(index, 1);\n    }\n  }\n\n  @action\n  funcKeyPress(event, question) {\n    if (event.key === 'Enter') {\n      this.funcAddQuestion(question);\n    }\n  }\n\n  // 서버통신\n  @action\n  funcGet() {\n    UkRepository.funcGet().then(\n      action(response => {\n        this._uks = toJS(response);\n        return this._uks;\n      }),\n    );\n  }\n}\n\nexport default new UkStore();\n"]},"metadata":{},"sourceType":"module"}