{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createPalette;\nexports.dark = exports.light = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _utils = require(\"@material-ui/utils\");\n\nvar _common = _interopRequireDefault(require(\"../colors/common\"));\n\nvar _grey = _interopRequireDefault(require(\"../colors/grey\"));\n\nvar _indigo = _interopRequireDefault(require(\"../colors/indigo\"));\n\nvar _pink = _interopRequireDefault(require(\"../colors/pink\"));\n\nvar _red = _interopRequireDefault(require(\"../colors/red\"));\n\nvar _orange = _interopRequireDefault(require(\"../colors/orange\"));\n\nvar _blue = _interopRequireDefault(require(\"../colors/blue\"));\n\nvar _green = _interopRequireDefault(require(\"../colors/green\"));\n\nvar _colorManipulator = require(\"./colorManipulator\");\n\nconst light = {\n  // The colors used to style the text.\n  text: {\n    // The most important text.\n    primary: 'rgba(0, 0, 0, 0.87)',\n    // Secondary text.\n    secondary: 'rgba(0, 0, 0, 0.6)',\n    // Disabled text have even lower visual prominence.\n    disabled: 'rgba(0, 0, 0, 0.38)'\n  },\n  // The color used to divide different elements.\n  divider: 'rgba(0, 0, 0, 0.12)',\n  // The background colors used to style the surfaces.\n  // Consistency between these values is important.\n  background: {\n    paper: _common.default.white,\n    default: _common.default.white\n  },\n  // The colors used to style the action elements.\n  action: {\n    // The color of an active action like an icon button.\n    active: 'rgba(0, 0, 0, 0.54)',\n    // The color of an hovered action.\n    hover: 'rgba(0, 0, 0, 0.04)',\n    hoverOpacity: 0.04,\n    // The color of a selected action.\n    selected: 'rgba(0, 0, 0, 0.08)',\n    selectedOpacity: 0.08,\n    // The color of a disabled action.\n    disabled: 'rgba(0, 0, 0, 0.26)',\n    // The background color of a disabled action.\n    disabledBackground: 'rgba(0, 0, 0, 0.12)',\n    disabledOpacity: 0.38,\n    focus: 'rgba(0, 0, 0, 0.12)',\n    focusOpacity: 0.12,\n    activatedOpacity: 0.12\n  }\n};\nexports.light = light;\nconst dark = {\n  text: {\n    primary: _common.default.white,\n    secondary: 'rgba(255, 255, 255, 0.7)',\n    disabled: 'rgba(255, 255, 255, 0.5)',\n    icon: 'rgba(255, 255, 255, 0.5)'\n  },\n  divider: 'rgba(255, 255, 255, 0.12)',\n  background: {\n    paper: '#121212',\n    default: '#121212'\n  },\n  action: {\n    active: _common.default.white,\n    hover: 'rgba(255, 255, 255, 0.08)',\n    hoverOpacity: 0.08,\n    selected: 'rgba(255, 255, 255, 0.16)',\n    selectedOpacity: 0.16,\n    disabled: 'rgba(255, 255, 255, 0.3)',\n    disabledBackground: 'rgba(255, 255, 255, 0.12)',\n    disabledOpacity: 0.38,\n    focus: 'rgba(255, 255, 255, 0.12)',\n    focusOpacity: 0.12,\n    activatedOpacity: 0.24\n  }\n};\nexports.dark = dark;\n\nfunction addLightOrDark(intent, direction, shade, tonalOffset) {\n  const tonalOffsetLight = tonalOffset.light || tonalOffset;\n  const tonalOffsetDark = tonalOffset.dark || tonalOffset * 1.5;\n\n  if (!intent[direction]) {\n    if (intent.hasOwnProperty(shade)) {\n      intent[direction] = intent[shade];\n    } else if (direction === 'light') {\n      intent.light = (0, _colorManipulator.lighten)(intent.main, tonalOffsetLight);\n    } else if (direction === 'dark') {\n      intent.dark = (0, _colorManipulator.darken)(intent.main, tonalOffsetDark);\n    }\n  }\n}\n\nfunction createPalette(palette) {\n  const {\n    primary = {\n      light: _indigo.default[300],\n      main: _indigo.default[500],\n      dark: _indigo.default[700]\n    },\n    secondary = {\n      light: _pink.default.A200,\n      main: _pink.default.A400,\n      dark: _pink.default.A700\n    },\n    error = {\n      light: _red.default[300],\n      main: _red.default[500],\n      dark: _red.default[700]\n    },\n    warning = {\n      light: _orange.default[300],\n      main: _orange.default[500],\n      dark: _orange.default[700]\n    },\n    info = {\n      light: _blue.default[300],\n      main: _blue.default[500],\n      dark: _blue.default[700]\n    },\n    success = {\n      light: _green.default[300],\n      main: _green.default[500],\n      dark: _green.default[700]\n    },\n    mode = 'light',\n    contrastThreshold = 3,\n    tonalOffset = 0.2\n  } = palette,\n        other = (0, _objectWithoutPropertiesLoose2.default)(palette, [\"primary\", \"secondary\", \"error\", \"warning\", \"info\", \"success\", \"mode\", \"contrastThreshold\", \"tonalOffset\"]); // Use the same logic as\n  // Bootstrap: https://github.com/twbs/bootstrap/blob/1d6e3710dd447de1a200f29e8fa521f8a0908f70/scss/_functions.scss#L59\n  // and material-components-web https://github.com/material-components/material-components-web/blob/ac46b8863c4dab9fc22c4c662dc6bd1b65dd652f/packages/mdc-theme/_functions.scss#L54\n\n  function getContrastText(background) {\n    const contrastText = (0, _colorManipulator.getContrastRatio)(background, dark.text.primary) >= contrastThreshold ? dark.text.primary : light.text.primary;\n\n    if (process.env.NODE_ENV !== 'production') {\n      const contrast = (0, _colorManipulator.getContrastRatio)(background, contrastText);\n\n      if (contrast < 3) {\n        console.error([`Material-UI: The contrast ratio of ${contrast}:1 for ${contrastText} on ${background}`, 'falls below the WCAG recommended absolute minimum contrast ratio of 3:1.', 'https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast'].join('\\n'));\n      }\n    }\n\n    return contrastText;\n  }\n\n  const augmentColor = ({\n    color,\n    name,\n    mainShade = 500,\n    lightShade = 300,\n    darkShade = 700\n  }) => {\n    color = (0, _extends2.default)({}, color);\n\n    if (!color.main && color[mainShade]) {\n      color.main = color[mainShade];\n    }\n\n    if (!color.hasOwnProperty('main')) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `Material-UI: The color${name ? ` (${name})` : ''} provided to augmentColor(color) is invalid.\nThe color object needs to have a \\`main\\` property or a \\`${mainShade}\\` property.` : (0, _utils.formatMuiErrorMessage)(11, name ? ` (${name})` : '', mainShade));\n    }\n\n    if (typeof color.main !== 'string') {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `Material-UI: The color${name ? ` (${name})` : ''} provided to augmentColor(color) is invalid.\n\\`color.main\\` should be a string, but \\`${JSON.stringify(color.main)}\\` was provided instead.\n\nDid you intend to use one of the following approaches?\n\nimport { green } from \"@material-ui/core/colors\";\n\nconst theme1 = createMuiTheme({ palette: {\n  primary: green,\n} });\n\nconst theme2 = createMuiTheme({ palette: {\n  primary: { main: green[500] },\n} });` : (0, _utils.formatMuiErrorMessage)(12, name ? ` (${name})` : '', JSON.stringify(color.main)));\n    }\n\n    addLightOrDark(color, 'light', lightShade, tonalOffset);\n    addLightOrDark(color, 'dark', darkShade, tonalOffset);\n\n    if (!color.contrastText) {\n      color.contrastText = getContrastText(color.main);\n    }\n\n    return color;\n  };\n\n  const modes = {\n    dark,\n    light\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!modes[mode]) {\n      console.error(`Material-UI: The palette mode \\`${mode}\\` is not supported.`);\n    }\n  }\n\n  const paletteOutput = (0, _utils.deepmerge)((0, _extends2.default)({\n    // A collection of common colors.\n    common: _common.default,\n    // The palette mode, can be light or dark.\n    mode,\n    // The colors used to represent primary interface elements for a user.\n    primary: augmentColor({\n      color: primary,\n      name: 'primary'\n    }),\n    // The colors used to represent secondary interface elements for a user.\n    secondary: augmentColor({\n      color: secondary,\n      name: 'secondary',\n      mainShade: 'A400',\n      lightShade: 'A200',\n      darkShade: 'A700'\n    }),\n    // The colors used to represent interface elements that the user should be made aware of.\n    error: augmentColor({\n      color: error,\n      name: 'error'\n    }),\n    // The colors used to represent potentially dangerous actions or important messages.\n    warning: augmentColor({\n      color: warning,\n      name: 'warning'\n    }),\n    // The colors used to present information to the user that is neutral and not necessarily important.\n    info: augmentColor({\n      color: info,\n      name: 'info'\n    }),\n    // The colors used to indicate the successful completion of an action that user triggered.\n    success: augmentColor({\n      color: success,\n      name: 'success'\n    }),\n    // The grey colors.\n    grey: _grey.default,\n    // Used by `getContrastText()` to maximize the contrast between\n    // the background and the text.\n    contrastThreshold,\n    // Takes a background color and returns the text color that maximizes the contrast.\n    getContrastText,\n    // Generate a rich color object.\n    augmentColor,\n    // Used by the functions below to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset\n  }, modes[mode]), other);\n  return paletteOutput;\n}","map":{"version":3,"sources":["/Users/yh/Desktop/github/workspace/kdb_studio/node_modules/@material-ui/core/node/styles/createPalette.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","createPalette","dark","light","_extends2","_objectWithoutPropertiesLoose2","_utils","_common","_grey","_indigo","_pink","_red","_orange","_blue","_green","_colorManipulator","text","primary","secondary","disabled","divider","background","paper","white","action","active","hover","hoverOpacity","selected","selectedOpacity","disabledBackground","disabledOpacity","focus","focusOpacity","activatedOpacity","icon","addLightOrDark","intent","direction","shade","tonalOffset","tonalOffsetLight","tonalOffsetDark","hasOwnProperty","lighten","main","darken","palette","A200","A400","A700","error","warning","info","success","mode","contrastThreshold","other","getContrastText","contrastText","getContrastRatio","process","env","NODE_ENV","contrast","console","join","augmentColor","color","name","mainShade","lightShade","darkShade","Error","formatMuiErrorMessage","JSON","stringify","modes","paletteOutput","deepmerge","common","grey"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createPalette;\nexports.dark = exports.light = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _utils = require(\"@material-ui/utils\");\n\nvar _common = _interopRequireDefault(require(\"../colors/common\"));\n\nvar _grey = _interopRequireDefault(require(\"../colors/grey\"));\n\nvar _indigo = _interopRequireDefault(require(\"../colors/indigo\"));\n\nvar _pink = _interopRequireDefault(require(\"../colors/pink\"));\n\nvar _red = _interopRequireDefault(require(\"../colors/red\"));\n\nvar _orange = _interopRequireDefault(require(\"../colors/orange\"));\n\nvar _blue = _interopRequireDefault(require(\"../colors/blue\"));\n\nvar _green = _interopRequireDefault(require(\"../colors/green\"));\n\nvar _colorManipulator = require(\"./colorManipulator\");\n\nconst light = {\n  // The colors used to style the text.\n  text: {\n    // The most important text.\n    primary: 'rgba(0, 0, 0, 0.87)',\n    // Secondary text.\n    secondary: 'rgba(0, 0, 0, 0.6)',\n    // Disabled text have even lower visual prominence.\n    disabled: 'rgba(0, 0, 0, 0.38)'\n  },\n  // The color used to divide different elements.\n  divider: 'rgba(0, 0, 0, 0.12)',\n  // The background colors used to style the surfaces.\n  // Consistency between these values is important.\n  background: {\n    paper: _common.default.white,\n    default: _common.default.white\n  },\n  // The colors used to style the action elements.\n  action: {\n    // The color of an active action like an icon button.\n    active: 'rgba(0, 0, 0, 0.54)',\n    // The color of an hovered action.\n    hover: 'rgba(0, 0, 0, 0.04)',\n    hoverOpacity: 0.04,\n    // The color of a selected action.\n    selected: 'rgba(0, 0, 0, 0.08)',\n    selectedOpacity: 0.08,\n    // The color of a disabled action.\n    disabled: 'rgba(0, 0, 0, 0.26)',\n    // The background color of a disabled action.\n    disabledBackground: 'rgba(0, 0, 0, 0.12)',\n    disabledOpacity: 0.38,\n    focus: 'rgba(0, 0, 0, 0.12)',\n    focusOpacity: 0.12,\n    activatedOpacity: 0.12\n  }\n};\nexports.light = light;\nconst dark = {\n  text: {\n    primary: _common.default.white,\n    secondary: 'rgba(255, 255, 255, 0.7)',\n    disabled: 'rgba(255, 255, 255, 0.5)',\n    icon: 'rgba(255, 255, 255, 0.5)'\n  },\n  divider: 'rgba(255, 255, 255, 0.12)',\n  background: {\n    paper: '#121212',\n    default: '#121212'\n  },\n  action: {\n    active: _common.default.white,\n    hover: 'rgba(255, 255, 255, 0.08)',\n    hoverOpacity: 0.08,\n    selected: 'rgba(255, 255, 255, 0.16)',\n    selectedOpacity: 0.16,\n    disabled: 'rgba(255, 255, 255, 0.3)',\n    disabledBackground: 'rgba(255, 255, 255, 0.12)',\n    disabledOpacity: 0.38,\n    focus: 'rgba(255, 255, 255, 0.12)',\n    focusOpacity: 0.12,\n    activatedOpacity: 0.24\n  }\n};\nexports.dark = dark;\n\nfunction addLightOrDark(intent, direction, shade, tonalOffset) {\n  const tonalOffsetLight = tonalOffset.light || tonalOffset;\n  const tonalOffsetDark = tonalOffset.dark || tonalOffset * 1.5;\n\n  if (!intent[direction]) {\n    if (intent.hasOwnProperty(shade)) {\n      intent[direction] = intent[shade];\n    } else if (direction === 'light') {\n      intent.light = (0, _colorManipulator.lighten)(intent.main, tonalOffsetLight);\n    } else if (direction === 'dark') {\n      intent.dark = (0, _colorManipulator.darken)(intent.main, tonalOffsetDark);\n    }\n  }\n}\n\nfunction createPalette(palette) {\n  const {\n    primary = {\n      light: _indigo.default[300],\n      main: _indigo.default[500],\n      dark: _indigo.default[700]\n    },\n    secondary = {\n      light: _pink.default.A200,\n      main: _pink.default.A400,\n      dark: _pink.default.A700\n    },\n    error = {\n      light: _red.default[300],\n      main: _red.default[500],\n      dark: _red.default[700]\n    },\n    warning = {\n      light: _orange.default[300],\n      main: _orange.default[500],\n      dark: _orange.default[700]\n    },\n    info = {\n      light: _blue.default[300],\n      main: _blue.default[500],\n      dark: _blue.default[700]\n    },\n    success = {\n      light: _green.default[300],\n      main: _green.default[500],\n      dark: _green.default[700]\n    },\n    mode = 'light',\n    contrastThreshold = 3,\n    tonalOffset = 0.2\n  } = palette,\n        other = (0, _objectWithoutPropertiesLoose2.default)(palette, [\"primary\", \"secondary\", \"error\", \"warning\", \"info\", \"success\", \"mode\", \"contrastThreshold\", \"tonalOffset\"]); // Use the same logic as\n  // Bootstrap: https://github.com/twbs/bootstrap/blob/1d6e3710dd447de1a200f29e8fa521f8a0908f70/scss/_functions.scss#L59\n  // and material-components-web https://github.com/material-components/material-components-web/blob/ac46b8863c4dab9fc22c4c662dc6bd1b65dd652f/packages/mdc-theme/_functions.scss#L54\n\n  function getContrastText(background) {\n    const contrastText = (0, _colorManipulator.getContrastRatio)(background, dark.text.primary) >= contrastThreshold ? dark.text.primary : light.text.primary;\n\n    if (process.env.NODE_ENV !== 'production') {\n      const contrast = (0, _colorManipulator.getContrastRatio)(background, contrastText);\n\n      if (contrast < 3) {\n        console.error([`Material-UI: The contrast ratio of ${contrast}:1 for ${contrastText} on ${background}`, 'falls below the WCAG recommended absolute minimum contrast ratio of 3:1.', 'https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast'].join('\\n'));\n      }\n    }\n\n    return contrastText;\n  }\n\n  const augmentColor = ({\n    color,\n    name,\n    mainShade = 500,\n    lightShade = 300,\n    darkShade = 700\n  }) => {\n    color = (0, _extends2.default)({}, color);\n\n    if (!color.main && color[mainShade]) {\n      color.main = color[mainShade];\n    }\n\n    if (!color.hasOwnProperty('main')) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `Material-UI: The color${name ? ` (${name})` : ''} provided to augmentColor(color) is invalid.\nThe color object needs to have a \\`main\\` property or a \\`${mainShade}\\` property.` : (0, _utils.formatMuiErrorMessage)(11, name ? ` (${name})` : '', mainShade));\n    }\n\n    if (typeof color.main !== 'string') {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `Material-UI: The color${name ? ` (${name})` : ''} provided to augmentColor(color) is invalid.\n\\`color.main\\` should be a string, but \\`${JSON.stringify(color.main)}\\` was provided instead.\n\nDid you intend to use one of the following approaches?\n\nimport { green } from \"@material-ui/core/colors\";\n\nconst theme1 = createMuiTheme({ palette: {\n  primary: green,\n} });\n\nconst theme2 = createMuiTheme({ palette: {\n  primary: { main: green[500] },\n} });` : (0, _utils.formatMuiErrorMessage)(12, name ? ` (${name})` : '', JSON.stringify(color.main)));\n    }\n\n    addLightOrDark(color, 'light', lightShade, tonalOffset);\n    addLightOrDark(color, 'dark', darkShade, tonalOffset);\n\n    if (!color.contrastText) {\n      color.contrastText = getContrastText(color.main);\n    }\n\n    return color;\n  };\n\n  const modes = {\n    dark,\n    light\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!modes[mode]) {\n      console.error(`Material-UI: The palette mode \\`${mode}\\` is not supported.`);\n    }\n  }\n\n  const paletteOutput = (0, _utils.deepmerge)((0, _extends2.default)({\n    // A collection of common colors.\n    common: _common.default,\n    // The palette mode, can be light or dark.\n    mode,\n    // The colors used to represent primary interface elements for a user.\n    primary: augmentColor({\n      color: primary,\n      name: 'primary'\n    }),\n    // The colors used to represent secondary interface elements for a user.\n    secondary: augmentColor({\n      color: secondary,\n      name: 'secondary',\n      mainShade: 'A400',\n      lightShade: 'A200',\n      darkShade: 'A700'\n    }),\n    // The colors used to represent interface elements that the user should be made aware of.\n    error: augmentColor({\n      color: error,\n      name: 'error'\n    }),\n    // The colors used to represent potentially dangerous actions or important messages.\n    warning: augmentColor({\n      color: warning,\n      name: 'warning'\n    }),\n    // The colors used to present information to the user that is neutral and not necessarily important.\n    info: augmentColor({\n      color: info,\n      name: 'info'\n    }),\n    // The colors used to indicate the successful completion of an action that user triggered.\n    success: augmentColor({\n      color: success,\n      name: 'success'\n    }),\n    // The grey colors.\n    grey: _grey.default,\n    // Used by `getContrastText()` to maximize the contrast between\n    // the background and the text.\n    contrastThreshold,\n    // Takes a background color and returns the text color that maximizes the contrast.\n    getContrastText,\n    // Generate a rich color object.\n    augmentColor,\n    // Used by the functions below to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset\n  }, modes[mode]), other);\n  return paletteOutput;\n}"]},"metadata":{},"sourceType":"script"}